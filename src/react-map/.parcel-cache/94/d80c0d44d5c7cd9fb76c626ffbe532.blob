"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TransferrableNodeIndex = exports.TransferredNodeIndex = exports.NodeType = exports.SVG_NAMESPACE = exports.HTML_NAMESPACE = void 0;

var _TransferrableKeys = require("./TransferrableKeys");

/**
 * Copyright 2018 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
exports.HTML_NAMESPACE = HTML_NAMESPACE;
const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
exports.SVG_NAMESPACE = SVG_NAMESPACE;
let NodeType;
exports.NodeType = NodeType;

(function (NodeType) {
  NodeType[NodeType["ELEMENT_NODE"] = 1] = "ELEMENT_NODE";
  NodeType[NodeType["ATTRIBUTE_NODE"] = 2] = "ATTRIBUTE_NODE";
  NodeType[NodeType["TEXT_NODE"] = 3] = "TEXT_NODE";
  NodeType[NodeType["CDATA_SECTION_NODE"] = 4] = "CDATA_SECTION_NODE";
  NodeType[NodeType["ENTITY_REFERENCE_NODE"] = 5] = "ENTITY_REFERENCE_NODE";
  NodeType[NodeType["ENTITY_NODE"] = 6] = "ENTITY_NODE";
  NodeType[NodeType["PROCESSING_INSTRUCTION_NODE"] = 7] = "PROCESSING_INSTRUCTION_NODE";
  NodeType[NodeType["COMMENT_NODE"] = 8] = "COMMENT_NODE";
  NodeType[NodeType["DOCUMENT_NODE"] = 9] = "DOCUMENT_NODE";
  NodeType[NodeType["DOCUMENT_TYPE_NODE"] = 10] = "DOCUMENT_TYPE_NODE";
  NodeType[NodeType["DOCUMENT_FRAGMENT_NODE"] = 11] = "DOCUMENT_FRAGMENT_NODE";
  NodeType[NodeType["NOTATION_NODE"] = 12] = "NOTATION_NODE";
})(NodeType || (exports.NodeType = NodeType = {}));

let TransferredNodeIndex;
exports.TransferredNodeIndex = TransferredNodeIndex;

(function (TransferredNodeIndex) {
  TransferredNodeIndex[TransferredNodeIndex["Index"] = 0] = "Index";
})(TransferredNodeIndex || (exports.TransferredNodeIndex = TransferredNodeIndex = {}));

let TransferrableNodeIndex;
exports.TransferrableNodeIndex = TransferrableNodeIndex;

(function (TransferrableNodeIndex) {
  TransferrableNodeIndex[TransferrableNodeIndex["Index"] = 0] = "Index";
  TransferrableNodeIndex[TransferrableNodeIndex["NodeType"] = 1] = "NodeType";
  TransferrableNodeIndex[TransferrableNodeIndex["NodeName"] = 2] = "NodeName";
  TransferrableNodeIndex[TransferrableNodeIndex["TextContent"] = 3] = "TextContent";
  TransferrableNodeIndex[TransferrableNodeIndex["Namespace"] = 4] = "Namespace";
  TransferrableNodeIndex[TransferrableNodeIndex["End"] = 5] = "End";
})(TransferrableNodeIndex || (exports.TransferrableNodeIndex = TransferrableNodeIndex = {}));