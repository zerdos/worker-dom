{"mappings":"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EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,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","sources":["../../node_modules/@parcel/runtime-react-refresh/lib/ReactRefreshRuntime.js","../../node_modules/react-refresh/runtime.js","../../node_modules/react-refresh/cjs/react-refresh-runtime.development.js","../../node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./index.ts","../main-thread/index.ts","../main-thread/install.ts","../transfer/Messages.ts","../transfer/TransferrableKeys.ts","../main-thread/mutator.ts","../main-thread/commands/offscreen-canvas.ts","../transfer/TransferrableMutation.ts","../main-thread/commands/event-subscription.ts","../transfer/TransferrableEvent.ts","../main-thread/nodes.ts","../transfer/TransferrableNodes.ts","../main-thread/commands/bounding-client-rect.ts","../transfer/TransferrableBoundClientRect.ts","../main-thread/commands/child-list.ts","../main-thread/commands/attribute.ts","../main-thread/commands/character-data.ts","../main-thread/commands/property.ts","../utils.ts","../main-thread/commands/long-task.ts","../main-thread/commands/object-mutation.ts","../main-thread/deserializeTransferrableObject.ts","../main-thread/commands/object-creation.ts","../main-thread/commands/image-bitmap.ts","../main-thread/commands/storage.ts","../transfer/TransferrableStorage.ts","../main-thread/commands/function.ts","../main-thread/strings.ts","../main-thread/configuration.ts","../main-thread/worker.ts","../main-thread/serialize.ts","../main-thread/debugging.ts","../main-thread/object-context.ts","../main-thread/exported-worker.ts"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nconst CODE = `\nvar Refresh = require('react-refresh/runtime');\n\nRefresh.injectIntoGlobalHook(window);\nwindow.$RefreshReg$ = function() {};\nwindow.$RefreshSig$ = function() {\n  return function(type) {\n    return type;\n  };\n};`;\n\nvar _default = new _plugin.Runtime({\n  async apply({\n    bundle,\n    options\n  }) {\n    if (bundle.type !== 'js' || !options.hot || !bundle.env.isBrowser() || options.mode !== 'development') {\n      return;\n    }\n\n    let mainEntry = bundle.getMainEntry();\n\n    if (mainEntry) {\n      let pkg = await mainEntry.getPackage();\n\n      if (pkg && pkg.dependencies && pkg.dependencies['react']) {\n        return {\n          filePath: __filename,\n          code: CODE,\n          isEntry: true\n        };\n      }\n    }\n  }\n\n});\n\nexports.default = _default;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-refresh-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-refresh-runtime.development.js');\n}\n","/** @license React v0.6.0\n * react-refresh-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\n\n\n\n\n\n // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\n\n\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n\n\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n\nvar PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.\n// It's OK to reference families, but use WeakMap/Set for types.\n\nvar allFamiliesByID = new Map();\nvar allFamiliesByType = new PossiblyWeakMap();\nvar allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families\n// that have actually been edited here. This keeps checks fast.\n// $FlowIssue\n\nvar updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.\n// It is an array of [Family, NextType] tuples.\n\nvar pendingUpdates = []; // This is injected by the renderer via DevTools global hook.\n\nvar helpersByRendererID = new Map();\nvar helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.\n\nvar mountedRoots = new Set(); // If a root captures an error, we add its element to this Map so we can retry on edit.\n\nvar failedRoots = new Map();\nvar didSomeRootFailOnMount = false;\n\nfunction computeFullKey(signature) {\n  if (signature.fullKey !== null) {\n    return signature.fullKey;\n  }\n\n  var fullKey = signature.ownKey;\n  var hooks;\n\n  try {\n    hooks = signature.getCustomHooks();\n  } catch (err) {\n    // This can happen in an edge case, e.g. if expression like Foo.useSomething\n    // depends on Foo which is lazily initialized during rendering.\n    // In that case just assume we'll have to remount.\n    signature.forceReset = true;\n    signature.fullKey = fullKey;\n    return fullKey;\n  }\n\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n\n    if (typeof hook !== 'function') {\n      // Something's wrong. Assume we need to remount.\n      signature.forceReset = true;\n      signature.fullKey = fullKey;\n      return fullKey;\n    }\n\n    var nestedHookSignature = allSignaturesByType.get(hook);\n\n    if (nestedHookSignature === undefined) {\n      // No signature means Hook wasn't in the source code, e.g. in a library.\n      // We'll skip it because we can assume it won't change during this session.\n      continue;\n    }\n\n    var nestedHookKey = computeFullKey(nestedHookSignature);\n\n    if (nestedHookSignature.forceReset) {\n      signature.forceReset = true;\n    }\n\n    fullKey += '\\n---\\n' + nestedHookKey;\n  }\n\n  signature.fullKey = fullKey;\n  return fullKey;\n}\n\nfunction haveEqualSignatures(prevType, nextType) {\n  var prevSignature = allSignaturesByType.get(prevType);\n  var nextSignature = allSignaturesByType.get(nextType);\n\n  if (prevSignature === undefined && nextSignature === undefined) {\n    return true;\n  }\n\n  if (prevSignature === undefined || nextSignature === undefined) {\n    return false;\n  }\n\n  if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {\n    return false;\n  }\n\n  if (nextSignature.forceReset) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isReactClass(type) {\n  return type.prototype && type.prototype.isReactComponent;\n}\n\nfunction canPreserveStateBetween(prevType, nextType) {\n  if (isReactClass(prevType) || isReactClass(nextType)) {\n    return false;\n  }\n\n  if (haveEqualSignatures(prevType, nextType)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolveFamily(type) {\n  // Only check updated types to keep lookups fast.\n  return updatedFamiliesByType.get(type);\n}\n\nfunction performReactRefresh() {\n  {\n    if (pendingUpdates.length === 0) {\n      return null;\n    }\n\n    var staleFamilies = new Set();\n    var updatedFamilies = new Set();\n    var updates = pendingUpdates;\n    pendingUpdates = [];\n    updates.forEach(function (_ref) {\n      var family = _ref[0],\n          nextType = _ref[1];\n      // Now that we got a real edit, we can create associations\n      // that will be read by the React reconciler.\n      var prevType = family.current;\n      updatedFamiliesByType.set(prevType, family);\n      updatedFamiliesByType.set(nextType, family);\n      family.current = nextType; // Determine whether this should be a re-render or a re-mount.\n\n      if (canPreserveStateBetween(prevType, nextType)) {\n        updatedFamilies.add(family);\n      } else {\n        staleFamilies.add(family);\n      }\n    }); // TODO: rename these fields to something more meaningful.\n\n    var update = {\n      updatedFamilies: updatedFamilies,\n      // Families that will re-render preserving state\n      staleFamilies: staleFamilies // Families that will be remounted\n\n    };\n    helpersByRendererID.forEach(function (helpers) {\n      // Even if there are no roots, set the handler on first update.\n      // This ensures that if *new* roots are mounted, they'll use the resolve handler.\n      helpers.setRefreshHandler(resolveFamily);\n    });\n    var didError = false;\n    var firstError = null;\n    failedRoots.forEach(function (element, root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      try {\n        helpers.scheduleRoot(root, element);\n      } catch (err) {\n        if (!didError) {\n          didError = true;\n          firstError = err;\n        } // Keep trying other roots.\n\n      }\n    });\n    mountedRoots.forEach(function (root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      try {\n        helpers.scheduleRefresh(root, update);\n      } catch (err) {\n        if (!didError) {\n          didError = true;\n          firstError = err;\n        } // Keep trying other roots.\n\n      }\n    });\n\n    if (didError) {\n      throw firstError;\n    }\n\n    return update;\n  }\n}\nfunction register(type, id) {\n  {\n    if (type === null) {\n      return;\n    }\n\n    if (typeof type !== 'function' && typeof type !== 'object') {\n      return;\n    } // This can happen in an edge case, e.g. if we register\n    // return value of a HOC but it returns a cached component.\n    // Ignore anything but the first registration for each type.\n\n\n    if (allFamiliesByType.has(type)) {\n      return;\n    } // Create family or remember to update it.\n    // None of this bookkeeping affects reconciliation\n    // until the first performReactRefresh() call above.\n\n\n    var family = allFamiliesByID.get(id);\n\n    if (family === undefined) {\n      family = {\n        current: type\n      };\n      allFamiliesByID.set(id, family);\n    } else {\n      pendingUpdates.push([family, type]);\n    }\n\n    allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.\n\n    if (typeof type === 'object' && type !== null) {\n      switch (type.$$typeof) {\n        case REACT_FORWARD_REF_TYPE:\n          register(type.render, id + '$render');\n          break;\n\n        case REACT_MEMO_TYPE:\n          register(type.type, id + '$type');\n          break;\n      }\n    }\n  }\n}\nfunction setSignature(type, key) {\n  var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;\n\n  {\n    allSignaturesByType.set(type, {\n      forceReset: forceReset,\n      ownKey: key,\n      fullKey: null,\n      getCustomHooks: getCustomHooks || function () {\n        return [];\n      }\n    });\n  }\n} // This is lazily called during first render for a type.\n// It captures Hook list at that time so inline requires don't break comparisons.\n\nfunction collectCustomHooksForSignature(type) {\n  {\n    var signature = allSignaturesByType.get(type);\n\n    if (signature !== undefined) {\n      computeFullKey(signature);\n    }\n  }\n}\nfunction getFamilyByID(id) {\n  {\n    return allFamiliesByID.get(id);\n  }\n}\nfunction getFamilyByType(type) {\n  {\n    return allFamiliesByType.get(type);\n  }\n}\nfunction findAffectedHostInstances(families) {\n  {\n    var affectedInstances = new Set();\n    mountedRoots.forEach(function (root) {\n      var helpers = helpersByRoot.get(root);\n\n      if (helpers === undefined) {\n        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n      }\n\n      var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);\n      instancesForRoot.forEach(function (inst) {\n        affectedInstances.add(inst);\n      });\n    });\n    return affectedInstances;\n  }\n}\nfunction injectIntoGlobalHook(globalObject) {\n  {\n    // For React Native, the global hook will be set up by require('react-devtools-core').\n    // That code will run before us. So we need to monkeypatch functions on existing hook.\n    // For React Web, the global hook will be set up by the extension.\n    // This will also run before us.\n    var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n    if (hook === undefined) {\n      // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.\n      // Note that in this case it's important that renderer code runs *after* this method call.\n      // Otherwise, the renderer will think that there is no global hook, and won't do the injection.\n      var nextID = 0;\n      globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {\n        supportsFiber: true,\n        inject: function (injected) {\n          return nextID++;\n        },\n        onCommitFiberRoot: function (id, root, maybePriorityLevel, didError) {},\n        onCommitFiberUnmount: function () {}\n      };\n    } // Here, we just want to get a reference to scheduleRefresh.\n\n\n    var oldInject = hook.inject;\n\n    hook.inject = function (injected) {\n      var id = oldInject.apply(this, arguments);\n\n      if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n        // This version supports React Refresh.\n        helpersByRendererID.set(id, injected);\n      }\n\n      return id;\n    }; // We also want to track currently mounted roots.\n\n\n    var oldOnCommitFiberRoot = hook.onCommitFiberRoot;\n\n    hook.onCommitFiberRoot = function (id, root, maybePriorityLevel, didError) {\n      var helpers = helpersByRendererID.get(id);\n\n      if (helpers === undefined) {\n        return;\n      }\n\n      helpersByRoot.set(root, helpers);\n      var current = root.current;\n      var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.\n      // This logic is copy-pasted from similar logic in the DevTools backend.\n      // If this breaks with some refactoring, you'll want to update DevTools too.\n\n      if (alternate !== null) {\n        var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;\n        var isMounted = current.memoizedState != null && current.memoizedState.element != null;\n\n        if (!wasMounted && isMounted) {\n          // Mount a new root.\n          mountedRoots.add(root);\n          failedRoots.delete(root);\n        } else if (wasMounted && isMounted) {// Update an existing root.\n          // This doesn't affect our mounted root Set.\n        } else if (wasMounted && !isMounted) {\n          // Unmount an existing root.\n          mountedRoots.delete(root);\n\n          if (didError) {\n            // We'll remount it on future edits.\n            // Remember what was rendered so we can restore it.\n            failedRoots.set(root, alternate.memoizedState.element);\n          } else {\n            helpersByRoot.delete(root);\n          }\n        } else if (!wasMounted && !isMounted) {\n          if (didError && !failedRoots.has(root)) {\n            // The root had an error during the initial mount.\n            // We can't read its last element from the memoized state\n            // because there was no previously committed alternate.\n            // Ideally, it would be nice if we had a way to extract\n            // the last attempted rendered element, but accessing the update queue\n            // would tie this package too closely to the reconciler version.\n            // So instead, we just set a flag.\n            // TODO: Maybe we could fix this as the same time as when we fix\n            // DevTools to not depend on `alternate.memoizedState.element`.\n            didSomeRootFailOnMount = true;\n          }\n        }\n      } else {\n        // Mount a new root.\n        mountedRoots.add(root);\n      }\n\n      return oldOnCommitFiberRoot.apply(this, arguments);\n    };\n  }\n}\nfunction hasUnrecoverableErrors() {\n  return didSomeRootFailOnMount;\n} // Exposed for testing.\n\nfunction _getMountedRootCount() {\n  {\n    return mountedRoots.size;\n  }\n} // This is a wrapper over more primitive functions for setting signature.\n// Signatures let us decide whether the Hook order has changed on refresh.\n//\n// This function is intended to be used as a transform target, e.g.:\n// var _s = createSignatureFunctionForTransform()\n//\n// function Hello() {\n//   const [foo, setFoo] = useState(0);\n//   const value = useCustomHook();\n//   _s(); /* Second call triggers collecting the custom Hook list.\n//          * This doesn't happen during the module evaluation because we\n//          * don't want to change the module order with inline requires.\n//          * Next calls are noops. */\n//   return <h1>Hi</h1>;\n// }\n//\n// /* First call specifies the signature: */\n// _s(\n//   Hello,\n//   'useState{[foo, setFoo]}(0)',\n//   () => [useCustomHook], /* Lazy to avoid triggering inline requires */\n// );\n\nfunction createSignatureFunctionForTransform() {\n  {\n    var call = 0;\n    var savedType;\n    var hasCustomHooks;\n    return function (type, key, forceReset, getCustomHooks) {\n      switch (call++) {\n        case 0:\n          savedType = type;\n          hasCustomHooks = typeof getCustomHooks === 'function';\n          setSignature(type, key, forceReset, getCustomHooks);\n          break;\n\n        case 1:\n          if (hasCustomHooks) {\n            collectCustomHooksForSignature(savedType);\n          }\n\n          break;\n      }\n\n      return type;\n    };\n  }\n}\nfunction isLikelyComponentType(type) {\n  {\n    switch (typeof type) {\n      case 'function':\n        {\n          // First, deal with classes.\n          if (type.prototype != null) {\n            if (type.prototype.isReactComponent) {\n              // React class.\n              return true;\n            }\n\n            var ownNames = Object.getOwnPropertyNames(type.prototype);\n\n            if (ownNames.length > 1 || ownNames[0] !== 'constructor') {\n              // This looks like a class.\n              return false;\n            } // eslint-disable-next-line no-proto\n\n\n            if (type.prototype.__proto__ !== Object.prototype) {\n              // It has a superclass.\n              return false;\n            } // Pass through.\n            // This looks like a regular function with empty prototype.\n\n          } // For plain functions and arrows, use name as a heuristic.\n\n\n          var name = type.name || type.displayName;\n          return typeof name === 'string' && /^[A-Z]/.test(name);\n        }\n\n      case 'object':\n        {\n          if (type != null) {\n            switch (type.$$typeof) {\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_MEMO_TYPE:\n                // Definitely React components.\n                return true;\n\n              default:\n                return false;\n            }\n          }\n\n          return false;\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n  }\n}\n\nvar ReactFreshRuntime = Object.freeze({\n\tperformReactRefresh: performReactRefresh,\n\tregister: register,\n\tsetSignature: setSignature,\n\tcollectCustomHooksForSignature: collectCustomHooksForSignature,\n\tgetFamilyByID: getFamilyByID,\n\tgetFamilyByType: getFamilyByType,\n\tfindAffectedHostInstances: findAffectedHostInstances,\n\tinjectIntoGlobalHook: injectIntoGlobalHook,\n\thasUnrecoverableErrors: hasUnrecoverableErrors,\n\t_getMountedRootCount: _getMountedRootCount,\n\tcreateSignatureFunctionForTransform: createSignatureFunctionForTransform,\n\tisLikelyComponentType: isLikelyComponentType\n});\n\n// This is hacky but makes it work with both Rollup and Jest.\n\n\nvar runtime = ReactFreshRuntime.default || ReactFreshRuntime;\n\nmodule.exports = runtime;\n  })();\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _utils = require(\"@parcel/utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst HMR_RUNTIME = _fs.default.readFileSync(_path.default.join(__dirname, './loaders/hmr-runtime.js'), 'utf8');\n\nvar _default = new _plugin.Runtime({\n  apply({\n    bundle,\n    options\n  }) {\n    if (bundle.type !== 'js' || !options.hot) {\n      return;\n    }\n\n    const {\n      host,\n      port\n    } = options.hot;\n    return {\n      filePath: __filename,\n      code: `var HMR_HOST = ${JSON.stringify(host != null ? host : null)};` + `var HMR_PORT = ${JSON.stringify(port != null ? port : null)};` + `var HMR_ENV_HASH = \"${(0, _utils.md5FromObject)(bundle.env)}\";` + `module.bundle.HMR_BUNDLE_ID = ${JSON.stringify(bundle.id)};` + HMR_RUNTIME,\n      isEntry: true\n    };\n  }\n\n});\n\nexports.default = _default;",null,"/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchAndInstall } from './install';\nimport { ExportedWorker } from './exported-worker';\n\nexport function upgradeElement(baseElement: Element, domURL: string, messageChannel?:MessageChannel): Promise<ExportedWorker |null> {\n  const authorURL = baseElement.getAttribute('src');\n  if (authorURL) {\n    return fetchAndInstall(baseElement as HTMLElement, {\n      messageChannel,\n      authorURL,\n      domURL,\n    });\n  }\n  return Promise.resolve(null);\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MutationFromWorker, MessageType, MessageFromWorker } from '../transfer/Messages';\nimport { MutatorProcessor } from './mutator';\nimport { NodeContext } from './nodes';\nimport { StringContext } from './strings';\nimport { TransferrableKeys } from '../transfer/TransferrableKeys';\nimport { InboundWorkerDOMConfiguration, normalizeConfiguration } from './configuration';\nimport { WorkerContext } from './worker';\nimport { ObjectContext } from './object-context';\nimport { ExportedWorker } from './exported-worker';\n\nconst ALLOWABLE_MESSAGE_TYPES = [MessageType.MUTATE, MessageType.HYDRATE];\n\n/**\n * @param baseElement\n * @param authorScriptURL\n * @param workerDOMURL\n * @param callbacks\n * @param sanitizer\n * @param debug\n */\nexport function fetchAndInstall(baseElement: HTMLElement, config: InboundWorkerDOMConfiguration): Promise<ExportedWorker | null> {\n  const fetchPromise = Promise.all([\n    // TODO(KB): Fetch Polyfill for IE11.\n    fetch(config.domURL).then((response) => response.text()),\n    fetch(config.authorURL).then((response) => response.text()),\n  ]);\n  return install(fetchPromise, baseElement, config);\n}\n\n/**\n * @param fetchPromise\n * @param baseElement\n * @param config\n */\nexport function install(\n  fetchPromise: Promise<[string, string]>,\n  baseElement: HTMLElement,\n  config: InboundWorkerDOMConfiguration,\n): Promise<ExportedWorker | null> {\n  const stringContext = new StringContext();\n  const objectContext = new ObjectContext();\n  const nodeContext = new NodeContext(stringContext, baseElement);\n  const normalizedConfig = normalizeConfiguration(config);\n  return fetchPromise.then(([domScriptContent, authorScriptContent]) => {\n    if (domScriptContent && authorScriptContent && config.authorURL) {\n      const workerContext = new WorkerContext(baseElement, nodeContext, domScriptContent, authorScriptContent, normalizedConfig);\n      const mutatorContext = new MutatorProcessor(stringContext, nodeContext, workerContext, normalizedConfig, objectContext);\n      workerContext.worker.onmessage = (message: MessageFromWorker) => {\n\n\n        const { data } = message;\n\n        if (!ALLOWABLE_MESSAGE_TYPES.includes(data[TransferrableKeys.type])) {\n          return;\n        }\n\n        mutatorContext.mutate(\n          (data as MutationFromWorker)[TransferrableKeys.phase],\n          (data as MutationFromWorker)[TransferrableKeys.nodes],\n          (data as MutationFromWorker)[TransferrableKeys.strings],\n          new Uint16Array(data[TransferrableKeys.mutations]),\n        );\n      };\n\n      return new ExportedWorker(workerContext, normalizedConfig);\n    }\n    return null;\n  });\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TransferrableEvent } from './TransferrableEvent';\nimport { TransferrableSyncValue } from './TransferrableSyncValue';\nimport { TransferrableKeys } from './TransferrableKeys';\nimport { HydrateableNode, TransferredNode } from './TransferrableNodes';\nimport { TransferrableBoundingClientRect } from './TransferrableBoundClientRect';\nimport { Phase } from './Phase';\nimport { StorageLocation } from './TransferrableStorage';\n\nexport enum MessageType {\n  // INIT = 0,\n  EVENT = 1,\n  HYDRATE = 2,\n  MUTATE = 3,\n  SYNC = 4,\n  RESIZE = 5,\n  GET_BOUNDING_CLIENT_RECT = 6,\n  LONG_TASK_START = 7,\n  LONG_TASK_END = 8,\n  OFFSCREEN_CANVAS_INSTANCE = 9,\n  IMAGE_BITMAP_INSTANCE = 10,\n  GET_STORAGE = 11,\n  FUNCTION = 12,\n  // NAVIGATION_PUSH_STATE = 8,\n  // NAVIGATION_REPLACE_STATE = 9,\n  // NAVIGATION_POP_STATE = 10,\n}\n\nexport interface MutationFromWorker {\n  readonly [TransferrableKeys.type]: MessageType;\n  readonly [TransferrableKeys.phase]: Phase;\n  readonly [TransferrableKeys.strings]: Array<string>;\n  readonly [TransferrableKeys.nodes]: ArrayBuffer;\n  readonly [TransferrableKeys.mutations]: ArrayBuffer;\n}\nexport type MessageFromWorker = {\n  data: MutationFromWorker;\n};\n\nexport interface HydrationToWorker {\n  readonly [TransferrableKeys.type]: MessageType.HYDRATE;\n  readonly [TransferrableKeys.strings]: Array<string>;\n  readonly [TransferrableKeys.nodes]: HydrateableNode;\n}\nexport interface EventToWorker {\n  [TransferrableKeys.type]: MessageType.EVENT;\n  [TransferrableKeys.event]: TransferrableEvent;\n}\nexport interface ValueSyncToWorker {\n  [TransferrableKeys.type]: MessageType.SYNC;\n  [TransferrableKeys.sync]: TransferrableSyncValue;\n}\nexport interface BoundingClientRectToWorker {\n  [TransferrableKeys.type]: MessageType.GET_BOUNDING_CLIENT_RECT;\n  [TransferrableKeys.target]: TransferredNode;\n  [TransferrableKeys.data]: TransferrableBoundingClientRect;\n}\nexport interface OffscreenCanvasToWorker {\n  [TransferrableKeys.type]: MessageType.OFFSCREEN_CANVAS_INSTANCE;\n  [TransferrableKeys.target]: TransferredNode;\n  [TransferrableKeys.data]: {}; // This will be an OffscreenCanvas\n}\nexport interface ImageBitmapToWorker {\n  [TransferrableKeys.type]: MessageType.IMAGE_BITMAP_INSTANCE;\n  [TransferrableKeys.callIndex]: number; // number that indicates the number of the image bitmap call\n  [TransferrableKeys.data]: {}; // This will be an ImageBitmap object\n}\nexport interface ResizeSyncToWorker {\n  [TransferrableKeys.type]: MessageType.RESIZE;\n  [TransferrableKeys.sync]: [number, number];\n}\nexport interface StorageValueToWorker {\n  [TransferrableKeys.type]: MessageType.GET_STORAGE;\n  [TransferrableKeys.storageKey]: string;\n  [TransferrableKeys.storageLocation]: StorageLocation;\n  [TransferrableKeys.value]: { [key: string]: string };\n}\n\nexport interface FunctionCallToWorker {\n  [TransferrableKeys.type]: MessageType.FUNCTION;\n  [TransferrableKeys.index]: number;\n  [TransferrableKeys.functionIdentifier]: string;\n  [TransferrableKeys.functionArguments]: string;\n}\n\nexport type MessageToWorker =\n  | EventToWorker\n  | ValueSyncToWorker\n  | BoundingClientRectToWorker\n  | ResizeSyncToWorker\n  | OffscreenCanvasToWorker\n  | ImageBitmapToWorker\n  | StorageValueToWorker\n  | FunctionCallToWorker;\n\n/**\n * Can parameterize a method invocation message as a getter or setter.\n */\nexport enum GetOrSet {\n  GET = 1,\n  SET = 2,\n}\n\n/**\n * Can parameterize a method invocation value as a resolved or rejected.\n */\nexport enum ResolveOrReject {\n  RESOLVE = 1,\n  REJECT = 2,\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TransferrableKeys {\n  nodeType = 0,\n  localOrNodeName = 1,\n  attributes = 2,\n  properties = 3,\n  childNodes = 4,\n  textContent = 5,\n  namespaceURI = 6,\n  index = 7,\n  creationFormat = 8,\n  transferredFormat = 9,\n  handlers = 10,\n  transferred = 11,\n  type = 12,\n  target = 13,\n  addedNodes = 14,\n  removedNodes = 15,\n  previousSibling = 16,\n  nextSibling = 17,\n  attributeName = 18,\n  attributeNamespace = 19,\n  propertyName = 20,\n  value = 21,\n  oldValue = 22,\n  addedEvents = 23,\n  removedEvents = 24,\n  bubbles = 25,\n  cancelable = 26,\n  cancelBubble = 27,\n  currentTarget = 28,\n  defaultPrevented = 29,\n  eventPhase = 30,\n  isTrusted = 31,\n  returnValue = 32,\n  timeStamp = 33,\n  scoped = 34,\n  keyCode = 35,\n  mutations = 36,\n  nodes = 37,\n  data = 38,\n  event = 39,\n  sync = 40,\n  strings = 41,\n  records = 42,\n  tokens = 43,\n  storeAttribute = 44,\n  scopingRoot = 45,\n  propertyBackedAttributes = 46,\n  checked = 47,\n  indeterminate = 48,\n  size = 49,\n  stop = 50,\n  end = 51,\n  selected = 52,\n  command = 53,\n  phase = 54,\n  worker = 55,\n  insertedNode = 56,\n  removedNode = 57,\n  allowTransfer = 58,\n  observe = 59,\n  pageX = 60,\n  pageY = 61,\n  touches = 62,\n  changedTouches = 63,\n  hydrateNode = 64,\n  offsetX = 65,\n  offsetY = 66,\n  mutated = 67,\n  serializeAsTransferrableObject = 68,\n  retrieveCanvasPattern = 69,\n  patternImplementation = 70,\n  patternUpgraded = 71,\n  patternUpgradePromise = 72,\n  callIndex = 73,\n  storageKey = 74,\n  storageLocation = 75,\n  propertyEventHandlers = 76,\n  functionIdentifier = 77,\n  functionArguments = 78,\n  // This must always be the last numerically ordered Key, for testing purposes.\n  END = 78,\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeContext } from './nodes';\nimport { StringContext } from './strings';\nimport { WorkerContext } from './worker';\nimport { OffscreenCanvasProcessor } from './commands/offscreen-canvas';\nimport { TransferrableMutationType, ReadableMutationType, isUserVisibleMutation } from '../transfer/TransferrableMutation';\nimport { EventSubscriptionProcessor } from './commands/event-subscription';\nimport { BoundingClientRectProcessor } from './commands/bounding-client-rect';\nimport { ChildListProcessor } from './commands/child-list';\nimport { AttributeProcessor } from './commands/attribute';\nimport { CharacterDataProcessor } from './commands/character-data';\nimport { PropertyProcessor } from './commands/property';\nimport { LongTaskExecutor } from './commands/long-task';\nimport { CommandExecutor } from './commands/interface';\nimport { WorkerDOMConfiguration, MutationPumpFunction } from './configuration';\nimport { Phase } from '../transfer/Phase';\nimport { ObjectMutationProcessor } from './commands/object-mutation';\nimport { ObjectCreationProcessor } from './commands/object-creation';\nimport { ObjectContext } from './object-context';\nimport { ImageBitmapProcessor } from './commands/image-bitmap';\nimport { StorageProcessor } from './commands/storage';\nimport { FunctionProcessor } from './commands/function';\n\nexport class MutatorProcessor {\n  private stringContext: StringContext;\n  private nodeContext: NodeContext;\n  private mutationQueue: Array<Uint16Array> = [];\n  private pendingMutations: boolean = false;\n  private mutationPumpFunction: MutationPumpFunction;\n  private sanitizer: Sanitizer | undefined;\n  private executors: {\n    [key: number]: CommandExecutor;\n  };\n\n  /**\n   * @param stringContext\n   * @param nodeContext\n   * @param workerContext\n   * @param sanitizer Sanitizer to apply to content if needed.\n   */\n  constructor(\n    stringContext: StringContext,\n    nodeContext: NodeContext,\n    workerContext: WorkerContext,\n    config: WorkerDOMConfiguration,\n    objectContext: ObjectContext,\n  ) {\n    this.stringContext = stringContext;\n    this.nodeContext = nodeContext;\n    this.sanitizer = config.sanitizer;\n    this.mutationPumpFunction = config.mutationPump;\n\n    const args: [StringContext, NodeContext, WorkerContext, ObjectContext, WorkerDOMConfiguration] = [\n      stringContext,\n      nodeContext,\n      workerContext,\n      objectContext,\n      config,\n    ];\n    const sharedLongTaskProcessor = LongTaskExecutor.apply(null, args);\n    this.executors = {\n      [TransferrableMutationType.CHILD_LIST]: ChildListProcessor.apply(null, args),\n      [TransferrableMutationType.ATTRIBUTES]: AttributeProcessor.apply(null, args),\n      [TransferrableMutationType.CHARACTER_DATA]: CharacterDataProcessor.apply(null, args),\n      [TransferrableMutationType.PROPERTIES]: PropertyProcessor.apply(null, args),\n      [TransferrableMutationType.EVENT_SUBSCRIPTION]: EventSubscriptionProcessor.apply(null, args),\n      [TransferrableMutationType.GET_BOUNDING_CLIENT_RECT]: BoundingClientRectProcessor.apply(null, args),\n      [TransferrableMutationType.LONG_TASK_START]: sharedLongTaskProcessor,\n      [TransferrableMutationType.LONG_TASK_END]: sharedLongTaskProcessor,\n      [TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE]: OffscreenCanvasProcessor.apply(null, args),\n      [TransferrableMutationType.OBJECT_MUTATION]: ObjectMutationProcessor.apply(null, args),\n      [TransferrableMutationType.OBJECT_CREATION]: ObjectCreationProcessor.apply(null, args),\n      [TransferrableMutationType.IMAGE_BITMAP_INSTANCE]: ImageBitmapProcessor.apply(null, args),\n      [TransferrableMutationType.STORAGE]: StorageProcessor.apply(null, args),\n      [TransferrableMutationType.FUNCTION_CALL]: FunctionProcessor.apply(null, args),\n    };\n  }\n\n  /**\n   * Process MutationRecords from worker thread applying changes to the existing DOM.\n   * @param phase Current Phase Worker Thread exists in.\n   * @param nodes New nodes to add in the main thread with the incoming mutations.\n   * @param stringValues Additional string values to use in decoding messages.\n   * @param mutations Changes to apply in both graph shape and content of Elements.\n   */\n  public mutate(phase: Phase, nodes: ArrayBuffer, stringValues: Array<string>, mutations: Uint16Array): void {\n    this.stringContext.storeValues(stringValues);\n    this.nodeContext.createNodes(nodes, this.sanitizer);\n    this.mutationQueue = this.mutationQueue.concat(mutations);\n    if (!this.pendingMutations) {\n      this.pendingMutations = true;\n      this.mutationPumpFunction(this.syncFlush, phase);\n    }\n  }\n\n  /**\n   * Apply all stored mutations syncronously. This method works well, but can cause jank if there are too many\n   * mutations to apply in a single frame.\n   *\n   * Investigations in using asyncFlush to resolve are worth considering.\n   *\n   * @param allowVisibleMutations\n   * @return Array of mutation types that were disallowed.\n   */\n  private syncFlush = (allowVisibleMutations: boolean = true): TransferrableMutationType[] => {\n    if (process.env[\"WORKER_DOM_DEBUG\"]) {\n      console.group('Mutations');\n    }\n    const disallowedMutations: TransferrableMutationType[] = [];\n    this.mutationQueue.forEach((mutationArray) => {\n      const length: number = mutationArray.length;\n      let operationStart: number = 0;\n\n      while (operationStart < length) {\n        // TransferrableMutationType is always at position 0.\n        const mutationType = mutationArray[operationStart];\n        // TODO(worker-dom): Hoist `allow` up to entry point (index.amp.ts) to avoid bundling `isUserVisibleMutation`.\n        const allow = allowVisibleMutations || !isUserVisibleMutation(mutationType);\n        if (!allow) {\n          // TODO(worker-dom): Consider returning the strings from executor.print() for better error messaging.\n          disallowedMutations.push(mutationType);\n        }\n        const executor = this.executors[mutationType];\n        if (process.env[\"WORKER_DOM_DEBUG\"]) {\n          console.log(allow ? '' : '[disallowed]', ReadableMutationType[mutationType], executor.print(mutationArray, operationStart));\n        }\n        operationStart = executor.execute(mutationArray, operationStart, allow);\n      }\n    });\n    if (process.env[\"WORKER_DOM_DEBUG\"]) {\n      console.groupEnd();\n    }\n    this.mutationQueue = [];\n    this.pendingMutations = false;\n    return disallowedMutations;\n  };\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TransferrableKeys } from '../../transfer/TransferrableKeys';\nimport { MessageType } from '../../transfer/Messages';\nimport { CommandExecutorInterface } from './interface';\nimport { OffscreenCanvasMutationIndex, TransferrableMutationType } from '../../transfer/TransferrableMutation';\n\nexport const OffscreenCanvasProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + OffscreenCanvasMutationIndex.Target];\n        const target = nodeContext.getNode(targetIndex);\n        if (target) {\n          const offscreen = (target as HTMLCanvasElement).transferControlToOffscreen();\n          workerContext.messageToWorker(\n            {\n              [TransferrableKeys.type]: MessageType.OFFSCREEN_CANVAS_INSTANCE,\n              [TransferrableKeys.target]: [target._index_],\n              [TransferrableKeys.data]: offscreen, // Object, an OffscreenCanvas\n            },\n            [offscreen],\n          );\n        } else {\n          console.error(`'OFFSCREEN_CANVAS_INSTANCE': getNode(${targetIndex}) is null.`);\n        }\n      }\n\n      return startPosition + OffscreenCanvasMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number, target?: RenderableElement | null): {} {\n      return {\n        type: 'OFFSCREEN_CANVAS_INSTANCE',\n        target,\n        allowedExecution,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TransferrableMutationType {\n  ATTRIBUTES = 0,\n  CHARACTER_DATA = 1,\n  CHILD_LIST = 2,\n  PROPERTIES = 3,\n  EVENT_SUBSCRIPTION = 4,\n  GET_BOUNDING_CLIENT_RECT = 5,\n  LONG_TASK_START = 6,\n  LONG_TASK_END = 7,\n  OFFSCREEN_CANVAS_INSTANCE = 8,\n  OBJECT_MUTATION = 9,\n  OBJECT_CREATION = 10,\n  IMAGE_BITMAP_INSTANCE = 11,\n  STORAGE = 12,\n  FUNCTION_CALL = 13,\n}\n\n/**\n * Returns true if the mutation type can cause a user-visible change to the DOM.\n * @param type\n */\nexport const isUserVisibleMutation = (type: TransferrableMutationType): boolean => {\n  switch (type) {\n    case TransferrableMutationType.EVENT_SUBSCRIPTION:\n    case TransferrableMutationType.GET_BOUNDING_CLIENT_RECT:\n    case TransferrableMutationType.LONG_TASK_START:\n    case TransferrableMutationType.LONG_TASK_END:\n    case TransferrableMutationType.STORAGE:\n    case TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE:\n    case TransferrableMutationType.FUNCTION_CALL:\n      return false;\n    default:\n      return true;\n  }\n};\n\nexport const DefaultAllowedMutations = [\n  TransferrableMutationType.ATTRIBUTES,\n  TransferrableMutationType.CHARACTER_DATA,\n  TransferrableMutationType.CHILD_LIST,\n  TransferrableMutationType.PROPERTIES,\n  TransferrableMutationType.EVENT_SUBSCRIPTION,\n  TransferrableMutationType.GET_BOUNDING_CLIENT_RECT,\n  TransferrableMutationType.LONG_TASK_START,\n  TransferrableMutationType.LONG_TASK_END,\n  TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE,\n  TransferrableMutationType.OBJECT_MUTATION,\n  TransferrableMutationType.OBJECT_CREATION,\n  TransferrableMutationType.IMAGE_BITMAP_INSTANCE,\n  TransferrableMutationType.STORAGE,\n  TransferrableMutationType.FUNCTION_CALL,\n];\n\nexport const ReadableMutationType: { [key: number]: string } = {\n  0: 'ATTRIBUTES',\n  1: 'CHARACTER_DATA',\n  2: 'CHILD_LIST',\n  3: 'PROPERTIES',\n  4: 'EVENT_SUBSCRIPTION',\n  5: 'GET_BOUNDING_CLIENT_RECT',\n  6: 'LONG_TASK_START',\n  7: 'LONG_TASK_END',\n  8: 'OFFSCREEN_CANVAS_INSTANCE',\n  9: 'OBJECT_MUTATION',\n  10: 'OBJECT_CREATION',\n  11: 'IMAGE_BITMAP_INSTANCE',\n  12: 'STORAGE',\n  13: 'FUNCTION_INVOCATION',\n};\n\n/**\n * Child List Mutations\n * [\n *   TransferrableMutationType.CHILD_LIST,\n *   Target.index,\n *   NextSibling.index,\n *   PreviousSibling.index,\n *   AppendedNodeCount,\n *   RemovedNodeCount,\n *   ... AppendedNode.index,\n *   ... RemovedNode.index,\n * ]\n */\nexport enum ChildListMutationIndex {\n  Target = 1,\n  NextSibling = 2,\n  PreviousSibling = 3,\n  AppendedNodeCount = 4,\n  RemovedNodeCount = 5,\n  Nodes = 6,\n  End = 6,\n}\n\n/**\n * Attribute Mutations\n * [\n *   TransferrableMutationType.ATTRIBUTES,\n *   Target.index,\n *   Attr.name,\n *   Attr.namespace,   // 0 is the default value.\n *   Attr.value,       // 0 is the default value.\n * ]\n */\nexport enum AttributeMutationIndex {\n  Target = 1,\n  Name = 2,\n  Namespace = 3,\n  Value = 4,\n  End = 5,\n}\n\n/**\n * Character Data Mutations\n * [\n *   TransferrableMutationType.CHARACTER_DATA,\n *   Target.index,\n *   CharacterData.value,\n * ]\n */\nexport enum CharacterDataMutationIndex {\n  Target = 1,\n  Value = 2,\n  End = 3,\n}\n\n/**\n * Properties Mutations\n * [\n *   TransferrableMutationType.PROPERTIES,\n *   Target.index,\n *   Property.name,\n *   typeof Property.value === boolean,\n *   Property.value,\n * ]\n */\nexport enum PropertyMutationIndex {\n  Target = 1,\n  Name = 2,\n  IsBoolean = 3,\n  Value = 4,\n  End = 5,\n}\n\n/**\n * Long Task Mutations\n * [\n *   TransferrableMutationType.LONG_TASK_START || TransferrableMutation.LONG_TASK_END\n *   Target.index,\n * ]\n */\nexport enum LongTaskMutationIndex {\n  Target = 1,\n  End = 2,\n}\n\n/**\n * OffscreenCanvas Mutations\n * [\n *   TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE,\n *   Target.index,\n * ]\n */\nexport enum OffscreenCanvasMutationIndex {\n  Target = 1,\n  End = 2,\n}\n\n/**\n * ImageBitmap Mutations\n * [\n *   TransferrableMutationType.IMAGE_BITMAP_INSTANCE,\n *   Target.index,\n * ]\n */\nexport enum ImageBitmapMutationIndex {\n  Target = 1,\n  CallIndex = 2,\n  End = 3,\n}\n\n/**\n * ObjectMutation Mutations\n * [\n *   TransferrableMutationType.IMAGE_BITMAP_INSTANCE,\n *   Target.index,\n * ]\n * // TODO(choumx): Fix naming inconsistency.\n */\nexport enum ObjectMutationIndex {\n  FunctionName = 1,\n  ArgumentCount = 2,\n  SerializedTarget = 3,\n  // \"End\" index is variable.\n}\n\n/**\n * ObjectCreation Mutations\n * [\n *   TransferrableMutationType.IMAGE_BITMAP_INSTANCE,\n *   Target.index,\n * ]\n * // TODO(choumx): Fix naming inconsistency.\n */\nexport enum ObjectCreationIndex {\n  FunctionName = 1,\n  ObjectId = 2,\n  ArgumentCount = 3,\n  SerializedTarget = 4,\n  // \"End\" index is variable.\n}\n\n/**\n * Used in OBJECT_MUTATION and OBJECT_CREATION mutations for typing non-primitives\n * passed in function parameters, e.g. <image> in CanvasRenderingContext2D.drawImage(<image>).\n */\nexport enum TransferrableObjectType {\n  SmallInt = 1,\n  Float = 2,\n  String = 3,\n  Array = 4,\n  TransferObject = 5,\n  CanvasRenderingContext2D = 6,\n  HTMLElement = 7,\n}\n\n/**\n * Storage Mutations\n * [\n *   TransferrableMutationType.STORAGE,\n *   GetOrSet,\n *   StorageLocation,\n *   string(key),\n *   string(value),\n * ]\n */\nexport enum StorageMutationIndex {\n  Operation = 1,\n  Location = 2,\n  Key = 3,\n  Value = 4,\n  End = 5,\n}\n\n/**\n * [\n *   TransferrableMutationType.FunctionInvocation,\n *   ResolveOrReject,\n *   index,\n *   string(value)\n * ]\n */\nexport enum FunctionMutationIndex {\n  Status = 1,\n  Index = 2,\n  Value = 3,\n  End = 4,\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessageType } from '../../transfer/Messages';\nimport { TransferrableKeys } from '../../transfer/TransferrableKeys';\nimport {\n  ADD_EVENT_SUBSCRIPTION_LENGTH,\n  REMOVE_EVENT_SUBSCRIPTION_LENGTH,\n  EventSubscriptionMutationIndex,\n  TransferrableTouchList,\n  AddEventRegistrationIndex,\n} from '../../transfer/TransferrableEvent';\nimport { WorkerContext } from '../worker';\nimport { CommandExecutorInterface } from './interface';\nimport { TransferrableMutationType } from '../../transfer/TransferrableMutation';\nimport { BASE_ELEMENT_INDEX } from '../nodes';\n\n/**\n * Monitoring Nodes attribute changes requires a Mutation Observer.\n * We store the nodes being monitored to avoid creating more than one Observer\n * per Element.\n */\nconst monitoredNodes: Map<RenderableElement, boolean> = new Map();\n\n/**\n * Instead of a whitelist of elements that need their value tracked, use the existence\n * of a property called value to drive the decision.\n * @param node node to check if values should be tracked.\n * @return boolean if the node should have its value property tracked.\n */\nconst shouldTrackChanges = (node: HTMLElement): boolean => node && 'value' in node;\n\n/**\n * When a node that has a value needing synced doesn't already have an event listener\n * listening for input values, ensure the value is synced with a default listener.\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const applyDefaultInputListener = (workerContext: WorkerContext, node: RenderableElement): void => {\n  if (shouldTrackChanges(node as HTMLElement) && node.oninput === null) {\n    node.oninput = () => fireValueChange(workerContext, node);\n  }\n};\n\n/**\n * Use a MutationObserver to capture value changes based on Attribute modification (frequently used by frameworks).\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const sendValueChangeOnAttributeMutation = (workerContext: WorkerContext, node: RenderableElement): void => {\n  if (shouldTrackChanges(node as HTMLElement) && !monitoredNodes.get(node)) {\n    new MutationObserver((mutations: Array<MutationRecord>) =>\n      mutations.map((mutation) => fireValueChange(workerContext, mutation.target as RenderableElement)),\n    ).observe(node, { attributes: true });\n    monitoredNodes.set(node, true);\n  }\n};\n\n/**\n * Tell WorkerDOM what the value is for a Node.\n * @param worker whom to dispatch value toward.\n * @param node where to get the value from.\n */\nconst fireValueChange = (workerContext: WorkerContext, node: RenderableElement): void =>\n  workerContext.messageToWorker({\n    [TransferrableKeys.type]: MessageType.SYNC,\n    [TransferrableKeys.sync]: {\n      [TransferrableKeys.index]: node._index_,\n      [TransferrableKeys.value]: node.value,\n    },\n  });\n\n/**\n * Tell WorkerDOM what the window dimensions are.\n * @param workerContext\n * @param cachedWindowSize\n */\nconst fireResizeChange = (workerContext: WorkerContext, cachedWindowSize: [number, number]): void =>\n  workerContext.messageToWorker({\n    [TransferrableKeys.type]: MessageType.RESIZE,\n    [TransferrableKeys.sync]: cachedWindowSize,\n  });\n\n/**\n * Convert a TouchList into a TransferrableTouchList\n * @param touchList\n */\nconst createTransferrableTouchList = (touchList: TouchList): TransferrableTouchList =>\n  Object.values(touchList).map((touch) => [\n    touch.identifier,\n    touch.screenX,\n    touch.screenY,\n    touch.clientX,\n    touch.clientY,\n    touch.pageX,\n    touch.pageY,\n    (touch.target as RenderableElement)._index_,\n  ]);\n\nexport const EventSubscriptionProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const knownListeners: Array<(event: Event) => any> = [];\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.EVENT_SUBSCRIPTION);\n  let cachedWindowSize: [number, number] = [window.innerWidth, window.innerHeight];\n\n  /**\n   * Register an event handler for dispatching events to worker thread\n   * @param worker whom to dispatch events toward\n   * @param index node index the event comes from (used to dispatchEvent in worker thread).\n   * @return eventHandler function consuming event and dispatching to worker thread\n   */\n  const eventHandler = (index: number, preventDefault: boolean) => (event: Event | KeyboardEvent | MouseEvent | TouchEvent): void => {\n    if (preventDefault) {\n      event.preventDefault();\n    }\n\n    if (shouldTrackChanges(event.currentTarget as HTMLElement)) {\n      fireValueChange(workerContext, event.currentTarget as RenderableElement);\n    } else if (event.type === 'resize') {\n      const { innerWidth, innerHeight } = window;\n      if (cachedWindowSize[0] === innerWidth && cachedWindowSize[1] === innerHeight) {\n        return;\n      }\n      cachedWindowSize = [window.innerWidth, window.innerHeight];\n      fireResizeChange(workerContext, cachedWindowSize);\n    }\n\n    workerContext.messageToWorker({\n      [TransferrableKeys.type]: MessageType.EVENT,\n      [TransferrableKeys.event]: {\n        [TransferrableKeys.index]: index,\n        [TransferrableKeys.bubbles]: event.bubbles,\n        [TransferrableKeys.cancelable]: event.cancelable,\n        [TransferrableKeys.cancelBubble]: event.cancelBubble,\n        [TransferrableKeys.currentTarget]: [(event.currentTarget as RenderableElement)._index_ || 0],\n        [TransferrableKeys.defaultPrevented]: event.defaultPrevented,\n        [TransferrableKeys.eventPhase]: event.eventPhase,\n        [TransferrableKeys.isTrusted]: event.isTrusted,\n        [TransferrableKeys.returnValue]: event.returnValue,\n        [TransferrableKeys.target]: [(event.target as RenderableElement)._index_ || 0],\n        [TransferrableKeys.timeStamp]: event.timeStamp,\n        [TransferrableKeys.type]: event.type,\n        [TransferrableKeys.keyCode]: 'keyCode' in event ? event.keyCode : undefined,\n        [TransferrableKeys.pageX]: 'pageX' in event ? event.pageX : undefined,\n        [TransferrableKeys.pageY]: 'pageY' in event ? event.pageY : undefined,\n        [TransferrableKeys.offsetX]: 'offsetX' in event ? event.offsetX : undefined,\n        [TransferrableKeys.offsetY]: 'offsetY' in event ? event.offsetY : undefined,\n        [TransferrableKeys.touches]: 'touches' in event ? createTransferrableTouchList(event.touches) : undefined,\n        [TransferrableKeys.changedTouches]: 'changedTouches' in event ? createTransferrableTouchList(event.changedTouches) : undefined,\n      },\n    });\n  };\n\n  /**\n   * If the worker requests to add an event listener to 'change' for something the foreground thread is already listening to,\n   * ensure that only a single 'change' event is attached to prevent sending values multiple times.\n   * @param target node to change listeners on\n   * @param addEvent is this an 'addEvent' or 'removeEvent' change\n   * @param mutations Uint16Array for this set of changes\n   * @param iterator current location in array to perform this change on\n   */\n  const processListenerChange = (target: RenderableElement, addEvent: boolean, mutations: Uint16Array, iterator: number): void => {\n    const type = strings.get(mutations[iterator]);\n    const eventIndex = mutations[iterator + AddEventRegistrationIndex.Index];\n\n    if (target === nodeContext.baseElement) {\n      if (addEvent) {\n        const preventDefault = Boolean(mutations[iterator + AddEventRegistrationIndex.WorkerDOMPreventDefault]);\n        addEventListener(type, (knownListeners[eventIndex] = eventHandler(BASE_ELEMENT_INDEX, preventDefault)));\n      } else {\n        removeEventListener(type, knownListeners[eventIndex]);\n      }\n      return;\n    }\n\n    let inputEventSubscribed: boolean = target.oninput !== null;\n    const isChangeEvent = type === 'change';\n    if (addEvent) {\n      if (isChangeEvent) {\n        inputEventSubscribed = true;\n        target.onchange = null;\n      }\n      const preventDefault = Boolean(mutations[iterator + AddEventRegistrationIndex.WorkerDOMPreventDefault]);\n      (target as HTMLElement).addEventListener(type, (knownListeners[eventIndex] = eventHandler(target._index_, preventDefault)));\n    } else {\n      if (isChangeEvent) {\n        inputEventSubscribed = false;\n      }\n      (target as HTMLElement).removeEventListener(type, knownListeners[eventIndex]);\n    }\n    if (shouldTrackChanges(target as HTMLElement)) {\n      if (!inputEventSubscribed) applyDefaultInputListener(workerContext, target as RenderableElement);\n      sendValueChangeOnAttributeMutation(workerContext, target as RenderableElement);\n    }\n  };\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      const addEventListenerCount = mutations[startPosition + EventSubscriptionMutationIndex.AddEventListenerCount];\n      const removeEventListenerCount = mutations[startPosition + EventSubscriptionMutationIndex.RemoveEventListenerCount];\n      const addEventListenersPosition =\n        startPosition + EventSubscriptionMutationIndex.Events + removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n      const endPosition =\n        startPosition +\n        EventSubscriptionMutationIndex.Events +\n        addEventListenerCount * ADD_EVENT_SUBSCRIPTION_LENGTH +\n        removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + EventSubscriptionMutationIndex.Target];\n        const target = nodeContext.getNode(targetIndex);\n\n        if (target) {\n          let iterator = startPosition + EventSubscriptionMutationIndex.Events;\n          while (iterator < endPosition) {\n            const isRemoveEvent = iterator <= addEventListenersPosition;\n            processListenerChange(target, isRemoveEvent, mutations, iterator);\n            iterator += isRemoveEvent ? REMOVE_EVENT_SUBSCRIPTION_LENGTH : ADD_EVENT_SUBSCRIPTION_LENGTH;\n          }\n        } else {\n          console.error(`getNode(${targetIndex}) is null.`);\n        }\n      }\n\n      return endPosition;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const addEventListenerCount = mutations[startPosition + EventSubscriptionMutationIndex.AddEventListenerCount];\n      const removeEventListenerCount = mutations[startPosition + EventSubscriptionMutationIndex.RemoveEventListenerCount];\n      const addEventListenersPosition =\n        startPosition + EventSubscriptionMutationIndex.Events + removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n      const endPosition =\n        startPosition +\n        EventSubscriptionMutationIndex.Events +\n        addEventListenerCount * ADD_EVENT_SUBSCRIPTION_LENGTH +\n        removeEventListenerCount * REMOVE_EVENT_SUBSCRIPTION_LENGTH;\n      const targetIndex = mutations[startPosition + EventSubscriptionMutationIndex.Target];\n      const target = nodeContext.getNode(targetIndex);\n      const removedEventListeners: Array<{ type: string; index: number }> = [];\n      const addedEventListeners: Array<{ type: string; index: number }> = [];\n\n      let iterator = startPosition + EventSubscriptionMutationIndex.Events;\n      while (iterator < endPosition) {\n        const isRemoveEvent = iterator <= addEventListenersPosition;\n        const eventList = isRemoveEvent ? addedEventListeners : removedEventListeners;\n        eventList.push({\n          type: strings.get(mutations[iterator]),\n          index: mutations[iterator + 1],\n        });\n        iterator += isRemoveEvent ? REMOVE_EVENT_SUBSCRIPTION_LENGTH : ADD_EVENT_SUBSCRIPTION_LENGTH;\n      }\n\n      return {\n        target,\n        allowedExecution,\n        removedEventListeners,\n        addedEventListeners,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TransferredNode } from './TransferrableNodes';\nimport { TransferrableKeys } from './TransferrableKeys';\n\ninterface TransferrableTouch {\n  [key: number]: number;\n}\nexport enum TransferrableTouchIndex {\n  Identifier = 0,\n  ScreenX = 1,\n  ScreenY = 2,\n  ClientX = 3,\n  ClientY = 4,\n  PageX = 5,\n  PageY = 6,\n  Target = 7,\n}\nexport interface TransferrableTouchList {\n  [key: number]: TransferrableTouch;\n}\n\nexport interface TransferrableEvent {\n  readonly [TransferrableKeys.index]: number;\n  readonly [TransferrableKeys.bubbles]?: boolean;\n  readonly [TransferrableKeys.cancelable]?: boolean;\n  [TransferrableKeys.cancelBubble]?: boolean;\n  readonly [TransferrableKeys.currentTarget]?: TransferredNode;\n  readonly [TransferrableKeys.defaultPrevented]?: boolean;\n  readonly [TransferrableKeys.eventPhase]?: number;\n  readonly [TransferrableKeys.isTrusted]?: boolean;\n  [TransferrableKeys.returnValue]?: boolean;\n  // readonly srcElement: TransferrableTarget | null;\n  readonly [TransferrableKeys.target]: TransferredNode | null;\n  readonly [TransferrableKeys.timeStamp]?: number;\n  readonly [TransferrableKeys.type]: string;\n  readonly [TransferrableKeys.scoped]?: boolean;\n  readonly [TransferrableKeys.keyCode]?: number;\n  readonly [TransferrableKeys.pageX]?: number;\n  readonly [TransferrableKeys.pageY]?: number;\n  readonly [TransferrableKeys.offsetX]?: number;\n  readonly [TransferrableKeys.offsetY]?: number;\n  readonly [TransferrableKeys.touches]?: TransferrableTouchList;\n  readonly [TransferrableKeys.changedTouches]?: TransferrableTouchList;\n}\n\n/**\n * Add Event Registration Transfer\n *\n * [\n *   type,\n *   index,\n *   capture,\n *   once,\n *   passive,\n *   workerDOMPreventDefault\n * ]\n */\nexport enum AddEventRegistrationIndex {\n  Type = 0,\n  Index = 1,\n  Capture = 2,\n  Once = 3,\n  Passive = 4,\n  WorkerDOMPreventDefault = 5,\n}\nexport const ADD_EVENT_SUBSCRIPTION_LENGTH = 6;\n\n/**\n * Remove Event Registration Transfer\n */\nexport enum RemoveEventRegistrationIndex {\n  Type = 0,\n  Index = 1,\n}\nexport const REMOVE_EVENT_SUBSCRIPTION_LENGTH = 2;\n\n/**\n * Event Subscription Transfer\n *\n * [\n *   TransferrableMutationType.EVENT_SUBSCRIPTION,\n *   Target.index,\n *   RemoveEventListener.count,\n *   AddEventListener.count,\n *   ...RemoveEvent<RemoveEventRegistration>,\n *   ...AddEvent<AddEventRegistration>,\n * ]\n */\nexport enum EventSubscriptionMutationIndex {\n  Target = 1,\n  RemoveEventListenerCount = 2,\n  AddEventListenerCount = 3,\n  Events = 4,\n  End = 4,\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeType, TransferrableNodeIndex } from '../transfer/TransferrableNodes';\nimport { StringContext } from './strings';\n\n/**\n * IE11 doesn't support NodeList.prototype.forEach\n * https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\n * @param list NodeList to iterate over\n * @param callback method to call with each node\n */\nconst nodeListEach = (list: NodeList, callback: (value: Node, key: number) => any): void => Array.prototype.forEach.call(list, callback);\n\nexport const BASE_ELEMENT_INDEX = 1;\n\nexport class NodeContext {\n  public baseElement: HTMLElement;\n  private stringContext: StringContext;\n  private count: number;\n  private nodes: Map<number, Node>;\n\n  /**\n   * Called when initializing a Worker, ensures the nodes in baseElement are\n   * known for transmission into the Worker and future mutation events from the\n   * Worker.\n   * @param baseElement Element that will be controlled by a Worker\n   */\n  constructor(stringContext: StringContext, baseElement: Element) {\n    this.count = 2;\n    this.stringContext = stringContext;\n\n    // The nodes map is populated with two default values pointing to baseElement.\n    // These are [document, document.body] from the worker.\n    this.nodes = new Map([\n      [BASE_ELEMENT_INDEX, baseElement],\n      [2, baseElement],\n    ]);\n    this.baseElement = baseElement as HTMLElement;\n    // To ensure a lookup works correctly from baseElement\n    // add an index equal to the background thread document.body.\n    baseElement._index_ = 2;\n    // Lastly, it's important while initializing the document that we store\n    // the default nodes present in the server rendered document.\n    nodeListEach(baseElement.childNodes, (n: ChildNode) => this.storeNodes(n));\n  }\n\n  public createNodes = (buffer: ArrayBuffer, sanitizer?: Sanitizer): void => {\n    const nodeBuffer = new Uint16Array(buffer);\n    const nodeBufferLength = nodeBuffer.length;\n\n    for (let iterator = 0; iterator < nodeBufferLength; iterator += TransferrableNodeIndex.End) {\n      let node: Node;\n      if (nodeBuffer[iterator + TransferrableNodeIndex.NodeType] === NodeType.TEXT_NODE) {\n        node = document.createTextNode(this.stringContext.get(nodeBuffer[iterator + TransferrableNodeIndex.TextContent]));\n      } else if (nodeBuffer[iterator + TransferrableNodeIndex.NodeType] === NodeType.COMMENT_NODE) {\n        node = document.createComment(this.stringContext.get(nodeBuffer[iterator + TransferrableNodeIndex.TextContent]));\n      } else if (nodeBuffer[iterator + TransferrableNodeIndex.NodeType] === NodeType.DOCUMENT_FRAGMENT_NODE) {\n        node = document.createDocumentFragment();\n      } else {\n        const nodeName = this.stringContext.get(nodeBuffer[iterator + TransferrableNodeIndex.NodeName]);\n        node =\n          nodeBuffer[iterator + TransferrableNodeIndex.Namespace] !== 0\n            ? document.createElementNS(this.stringContext.get(nodeBuffer[iterator + TransferrableNodeIndex.Namespace]), nodeName)\n            : document.createElement(nodeName);\n\n        // TODO(KB): Restore Properties\n        // skeleton.properties.forEach(property => {\n        //   node[`${property.name}`] = property.value;\n        // });\n        // ((skeleton as TransferrableElement)[TransferrableKeys.childNodes] || []).forEach(childNode => {\n        //   if (childNode[TransferrableKeys.transferred] === NumericBoolean.FALSE) {\n        //     node.appendChild(this.createNode(childNode as TransferrableNode));\n        //   }\n        // });\n\n        // If `node` is removed by the sanitizer, don't store it and return null.\n        if (sanitizer && !sanitizer.sanitize(node)) {\n          continue;\n        }\n      }\n\n      this.storeNode(node, nodeBuffer[iterator]);\n    }\n  };\n\n  /**\n   * Returns the real DOM Element corresponding to a serialized Element object.\n   * @param id\n   * @return RenderableElement | null\n   */\n  public getNode = (id: number): RenderableElement | null => {\n    const node = this.nodes.get(id);\n\n    if (node && node.nodeName === 'BODY') {\n      // If the node requested is the \"BODY\"\n      // Then we return the base node this specific <amp-script> comes from.\n      // This encapsulates each <amp-script> node.\n      return this.baseElement as RenderableElement;\n    }\n    return node as RenderableElement;\n  };\n\n  /**\n   * Store the requested node and all of its children.\n   * @param node node to store.\n   */\n  private storeNodes = (node: Node): void => {\n    this.storeNode(node, ++this.count);\n    nodeListEach(node.childNodes, (n: ChildNode) => this.storeNodes(n));\n  };\n\n  /**\n   * Establish link between DOM `node` and worker-generated identifier `id`.\n   *\n   * These _shouldn't_ collide between instances of <amp-script> since\n   * each element creates it's own pool on both sides of the worker\n   * communication bridge.\n   * @param node\n   * @param id\n   */\n  private storeNode(node: Node, id: number): void {\n    (node as Node)._index_ = id;\n    this.nodes.set(id, node as Node);\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NumericBoolean } from '../utils';\nimport { TransferrableKeys } from './TransferrableKeys';\n\nexport const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport enum NodeType {\n  ELEMENT_NODE = 1,\n  ATTRIBUTE_NODE = 2,\n  TEXT_NODE = 3,\n  CDATA_SECTION_NODE = 4,\n  ENTITY_REFERENCE_NODE = 5,\n  ENTITY_NODE = 6,\n  PROCESSING_INSTRUCTION_NODE = 7,\n  COMMENT_NODE = 8,\n  DOCUMENT_NODE = 9,\n  DOCUMENT_TYPE_NODE = 10,\n  DOCUMENT_FRAGMENT_NODE = 11,\n  NOTATION_NODE = 12,\n}\n\nexport interface HydrateableNode {\n  readonly [TransferrableKeys.index]: number;\n  readonly [TransferrableKeys.transferred]: NumericBoolean;\n  readonly [TransferrableKeys.nodeType]: NodeType;\n  readonly [TransferrableKeys.localOrNodeName]: number;\n  [TransferrableKeys.textContent]?: number;\n  [TransferrableKeys.namespaceURI]?: number;\n  [TransferrableKeys.attributes]?: Array<[number, number, number]>;\n  [TransferrableKeys.childNodes]?: Array<HydrateableNode>;\n}\n\n// If a Node has been transferred once already to main thread then we need only pass its index.\nexport interface TransferredNode {\n  readonly [0]: number;\n}\n\nexport enum TransferredNodeIndex {\n  Index = 0,\n}\n\ntype TransferrableNodeName = number;\ntype TransferrableTextContent = number;\ntype TransferrableNamespaceURI = number;\nexport interface TransferrableNode extends TransferredNode {\n  readonly [1]: NodeType;\n  readonly [2]: TransferrableNodeName;\n\n  readonly [3]: TransferrableTextContent;\n  readonly [4]: TransferrableNamespaceURI;\n}\n\nexport enum TransferrableNodeIndex {\n  Index = 0,\n  NodeType = 1,\n  NodeName = 2,\n  TextContent = 3,\n  Namespace = 4,\n  End = 5,\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TransferrableKeys } from '../../transfer/TransferrableKeys';\nimport { MessageType } from '../../transfer/Messages';\nimport { CommandExecutorInterface } from './interface';\nimport { BoundClientRectMutationIndex } from '../../transfer/TransferrableBoundClientRect';\nimport { TransferrableMutationType } from '../../transfer/TransferrableMutation';\n\nexport const BoundingClientRectProcessor: CommandExecutorInterface = (strings, nodes, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.GET_BOUNDING_CLIENT_RECT);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + BoundClientRectMutationIndex.Target];\n        const target = nodes.getNode(targetIndex);\n        if (target) {\n          const boundingRect = target.getBoundingClientRect();\n          workerContext.messageToWorker({\n            [TransferrableKeys.type]: MessageType.GET_BOUNDING_CLIENT_RECT,\n            [TransferrableKeys.target]: [target._index_],\n            [TransferrableKeys.data]: [\n              boundingRect.top,\n              boundingRect.right,\n              boundingRect.bottom,\n              boundingRect.left,\n              boundingRect.width,\n              boundingRect.height,\n            ],\n          });\n        } else {\n          console.error(`GET_BOUNDING_CLIENT_RECT: getNode(${targetIndex}) is null.`);\n        }\n      }\n\n      return startPosition + BoundClientRectMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const targetIndex = mutations[startPosition + BoundClientRectMutationIndex.Target];\n      const target = nodes.getNode(targetIndex);\n      return {\n        type: 'GET_BOUNDING_CLIENT_RECT',\n        target,\n        allowedExecution,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum BoundClientRectMutationIndex {\n  Target = 1,\n  End = 2,\n}\n\n// [top, right, bottom, left, width, height]\nexport type TransferrableBoundingClientRect = [number, number, number, number, number, number];\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildListMutationIndex, TransferrableMutationType } from '../../transfer/TransferrableMutation';\nimport { CommandExecutorInterface } from './interface';\nimport { NodeContext } from '../nodes';\nimport { applyDefaultInputListener, sendValueChangeOnAttributeMutation } from './event-subscription';\n\nexport const ChildListProcessor: CommandExecutorInterface = (strings, { getNode }: NodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.CHILD_LIST);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      const appendNodeCount = mutations[startPosition + ChildListMutationIndex.AppendedNodeCount];\n      const removeNodeCount = mutations[startPosition + ChildListMutationIndex.RemovedNodeCount];\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + ChildListMutationIndex.Target];\n        const target = getNode(targetIndex);\n        if (target) {\n          if (removeNodeCount > 0) {\n            mutations\n              .slice(\n                startPosition + ChildListMutationIndex.Nodes + appendNodeCount,\n                startPosition + ChildListMutationIndex.Nodes + appendNodeCount + removeNodeCount,\n              )\n              .forEach((removeId) => {\n                const node = getNode(removeId);\n                if (node) {\n                  node.remove();\n                } else {\n                  console.error(`CHILD_LIST: getNode(${removeId}) is null.`);\n                }\n              });\n          }\n          if (appendNodeCount > 0) {\n            mutations\n              .slice(startPosition + ChildListMutationIndex.Nodes, startPosition + ChildListMutationIndex.Nodes + appendNodeCount)\n              .forEach((addId) => {\n                const nextSibling = mutations[startPosition + ChildListMutationIndex.NextSibling];\n                const newNode = getNode(addId);\n                if (newNode) {\n                  // TODO: Handle this case ---\n                  // Transferred nodes that are not stored were previously removed by the sanitizer.\n                  target.insertBefore(newNode, (nextSibling && getNode(nextSibling)) || null);\n                  applyDefaultInputListener(workerContext, newNode);\n                  sendValueChangeOnAttributeMutation(workerContext, newNode);\n                }\n              });\n          }\n        } else {\n          console.error(`CHILD_LIST: getNode(${targetIndex}) is null.`);\n        }\n      }\n      return startPosition + ChildListMutationIndex.End + appendNodeCount + removeNodeCount;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const targetIndex = mutations[startPosition + ChildListMutationIndex.Target];\n      const target = getNode(targetIndex);\n      const appendNodeCount = mutations[startPosition + ChildListMutationIndex.AppendedNodeCount];\n      const removeNodeCount = mutations[startPosition + ChildListMutationIndex.RemovedNodeCount];\n      const removedNodes = Array.from(\n        mutations.slice(\n          startPosition + ChildListMutationIndex.Nodes + appendNodeCount,\n          startPosition + ChildListMutationIndex.Nodes + appendNodeCount + removeNodeCount,\n        ),\n      ).map((index) => getNode(index) || index);\n      const addedNodes = Array.from(\n        mutations.slice(startPosition + ChildListMutationIndex.Nodes, startPosition + ChildListMutationIndex.Nodes + appendNodeCount),\n      ).map((index) => getNode(index) || index);\n\n      return {\n        target,\n        allowedExecution,\n        nextSibling: getNode(mutations[startPosition + ChildListMutationIndex.NextSibling]) || null,\n        previousSibling: getNode(mutations[startPosition + ChildListMutationIndex.PreviousSibling]) || null,\n        addedNodes,\n        removedNodes,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AttributeMutationIndex, TransferrableMutationType } from '../../transfer/TransferrableMutation';\nimport { CommandExecutorInterface } from './interface';\n\nexport const AttributeProcessor: CommandExecutorInterface = (strings, nodes, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.ATTRIBUTES);\n\n  /**\n   * @param mutations\n   * @param startPosition\n   */\n  const getValue = (mutations: Uint16Array, startPosition: number): string | null => {\n    const value = mutations[startPosition + AttributeMutationIndex.Value];\n    // Value is sent as 0 when it's the default value or removal.\n    // Value is sent as index + 1 when it's a valid value.\n    return value !== 0 ? strings.get(value - 1) : null;\n  };\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + AttributeMutationIndex.Target];\n        const target = nodes.getNode(targetIndex);\n\n        const attributeName = strings.get(mutations[startPosition + AttributeMutationIndex.Name]);\n        const value = getValue(mutations, startPosition);\n\n        if (target) {\n          if (attributeName != null) {\n            if (config.sanitizer) {\n              const mutated = config.sanitizer.setAttribute(target, attributeName, value);\n              if (!mutated) {\n                // TODO(choumx): Inform worker that sanitizer ignored unsafe attribute value change.\n              }\n            } else {\n              if (value == null) {\n                target.removeAttribute(attributeName);\n              } else {\n                target.setAttribute(attributeName, value);\n              }\n            }\n          }\n        } else {\n          console.error(`ATTR_LIST: getNode(${targetIndex}) is null.`);\n        }\n      }\n      return startPosition + AttributeMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const targetIndex = mutations[startPosition + AttributeMutationIndex.Target];\n      const target = nodes.getNode(targetIndex);\n      const attributeName = strings.get(mutations[startPosition + AttributeMutationIndex.Name]);\n      const value = getValue(mutations, startPosition);\n\n      return {\n        target,\n        allowedExecution,\n        attributeName,\n        value,\n        remove: value == null,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CharacterDataMutationIndex, TransferrableMutationType } from '../../transfer/TransferrableMutation';\nimport { CommandExecutorInterface } from './interface';\n\nexport const CharacterDataProcessor: CommandExecutorInterface = (strings, nodes, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.CHARACTER_DATA);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + CharacterDataMutationIndex.Target];\n        const target = nodes.getNode(targetIndex);\n        const value = mutations[startPosition + CharacterDataMutationIndex.Value];\n        if (target) {\n          if (value) {\n            // Sanitization not necessary for textContent.\n            target.textContent = strings.get(value);\n          }\n        } else {\n          console.error(`CHAR_DATA: getNode(${targetIndex}) is null.`);\n        }\n      }\n      return startPosition + CharacterDataMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const targetIndex = mutations[startPosition + CharacterDataMutationIndex.Target];\n      const target = nodes.getNode(targetIndex);\n      return {\n        target,\n        allowedExecution,\n        value: strings.get(mutations[startPosition + CharacterDataMutationIndex.Value]),\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyMutationIndex, TransferrableMutationType } from '../../transfer/TransferrableMutation';\nimport { CommandExecutorInterface } from './interface';\nimport { NumericBoolean } from '../../utils';\n\nexport const PropertyProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.PROPERTIES);\n\n  const getValue = (mutations: Uint16Array, startPosition: number): boolean | string | null => {\n    const value = mutations[startPosition + PropertyMutationIndex.Value];\n    if (mutations[startPosition + PropertyMutationIndex.IsBoolean] === NumericBoolean.TRUE) {\n      return value === NumericBoolean.TRUE;\n    }\n    if (value !== 0) {\n      return strings.get(value);\n    }\n    return null;\n  };\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + PropertyMutationIndex.Target];\n        const target = nodeContext.getNode(targetIndex);\n        const name = strings.get(mutations[startPosition + PropertyMutationIndex.Name]);\n        const value = getValue(mutations, startPosition);\n\n        if (target) {\n          if (name && value != null) {\n            if (config.sanitizer) {\n              const mutated = config.sanitizer.setProperty(target, name, String(value));\n              if (!mutated) {\n                // TODO(choumx): Inform worker that sanitizer ignored unsafe property value change.\n              }\n            } else {\n              target[name] = value;\n            }\n          }\n        } else {\n          console.error(`PROPERTY: getNode(${targetIndex}) is null.`);\n        }\n      }\n\n      return startPosition + PropertyMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const targetIndex = mutations[startPosition + PropertyMutationIndex.Target];\n      const target = nodeContext.getNode(targetIndex);\n      const name = strings.get(mutations[startPosition + PropertyMutationIndex.Name]);\n      const value = getValue(mutations, startPosition);\n\n      return {\n        target,\n        name,\n        value,\n        allowedExecution,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const toLower = (value: string): string => value.toLowerCase();\n\nexport const toUpper = (value: string): string => value.toUpperCase();\n\nexport const containsIndexOf = (pos: number): boolean => pos !== -1;\n\nexport const keyValueString = (key: string, value: string): string => `${key}=\"${value}\"`;\n\nexport enum NumericBoolean {\n  FALSE = 0,\n  TRUE = 1,\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandExecutor, CommandExecutorInterface } from './interface';\nimport { TransferrableMutationType, ReadableMutationType, LongTaskMutationIndex } from '../../transfer/TransferrableMutation';\nimport { StringContext } from '../strings';\nimport { NodeContext } from '../nodes';\nimport { WorkerContext } from '../worker';\nimport { WorkerDOMConfiguration } from '../configuration';\nimport { ObjectContext } from '../object-context';\n\nexport interface LongTaskCommandExecutorInterface extends CommandExecutorInterface {\n  (\n    stringContext: StringContext,\n    nodeContext: NodeContext,\n    workerContext: WorkerContext,\n    objectContext: ObjectContext,\n    config: WorkerDOMConfiguration,\n  ): LongTaskCommandExecutor;\n}\nexport interface LongTaskCommandExecutor extends CommandExecutor {\n  active: boolean;\n}\n\nexport const LongTaskExecutor: LongTaskCommandExecutorInterface = (\n  stringContext: StringContext,\n  nodeContext: NodeContext,\n  workerContext: WorkerContext,\n  objectContext: ObjectContext,\n  config: WorkerDOMConfiguration,\n) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.LONG_TASK_START);\n  let index: number = 0;\n  let currentResolver: Function | null;\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation && config.longTask) {\n        if (mutations[startPosition] === TransferrableMutationType.LONG_TASK_START) {\n          index++;\n          if (!currentResolver) {\n            config.longTask(new Promise((resolve) => (currentResolver = resolve)));\n          }\n        } else if (mutations[startPosition] === TransferrableMutationType.LONG_TASK_END) {\n          index--;\n          if (currentResolver && index <= 0) {\n            currentResolver();\n            currentResolver = null;\n            index = 0;\n          }\n        }\n      }\n      return startPosition + LongTaskMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      return {\n        type: ReadableMutationType[mutations[startPosition]],\n        allowedExecution,\n      };\n    },\n    get active(): boolean {\n      return currentResolver !== null;\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TransferrableMutationType, ObjectMutationIndex } from '../../transfer/TransferrableMutation';\nimport { CommandExecutorInterface } from './interface';\nimport { deserializeTransferrableObject } from '../deserializeTransferrableObject';\n\nexport const ObjectMutationProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.OBJECT_MUTATION);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      const functionName = strings.get(mutations[startPosition + ObjectMutationIndex.FunctionName]);\n      const argCount = mutations[startPosition + ObjectMutationIndex.ArgumentCount];\n\n      const { offset: targetOffset, args: deserializedTarget } = deserializeTransferrableObject(\n        mutations,\n        startPosition + ObjectMutationIndex.SerializedTarget,\n        1,\n        strings,\n        nodeContext,\n        objectContext,\n      );\n      const target = deserializedTarget[0] as any;\n\n      const { offset: argsOffset, args } = deserializeTransferrableObject(mutations, targetOffset, argCount, strings, nodeContext, objectContext);\n\n      if (allowedExecution && allowedMutation) {\n        if (isSetter(target, functionName)) {\n          target[functionName] = args[0];\n        } else {\n          target[functionName](...args);\n        }\n      }\n\n      return argsOffset;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const functionName = strings.get(mutations[startPosition + ObjectMutationIndex.FunctionName]);\n      const { args: deserializedTarget } = deserializeTransferrableObject(\n        mutations,\n        startPosition + ObjectMutationIndex.SerializedTarget,\n        1,\n        strings,\n        nodeContext,\n        objectContext,\n      );\n      const target = deserializedTarget[0] as RenderableElement;\n\n      return {\n        type: 'OBJECT_MUTATION',\n        target,\n        functionName,\n        isSetter: isSetter(target, functionName),\n        allowedExecution,\n      };\n    },\n  };\n};\n\nfunction isSetter(object: {}, name: string): boolean {\n  if (!object) {\n    throw new Error(`Property ${name} does not exist on ${object}.`);\n  }\n\n  const descriptor = Object.getOwnPropertyDescriptor(object, name);\n\n  if (descriptor !== undefined) {\n    return 'set' in descriptor;\n  }\n\n  return isSetter(Object.getPrototypeOf(object), name);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StringContext } from './strings';\nimport { TransferrableObjectType } from '../transfer/TransferrableMutation';\nimport { NodeContext } from './nodes';\nimport { ObjectContext } from './object-context';\n\ninterface DeserializedArgs {\n  args: unknown[];\n  offset: number;\n}\n\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\n\n/**\n * Deserializes TransferrableObjectType arguments.\n * @param buffer Contains mutation with arguments to deserialize.\n * @param offset Start position of arguments in mutations buffer.\n * @param count Number of arguments to deserialize.\n * @param stringContext Strings context.\n * @param nodeContext Nodes context.\n * @param objectContext Objects context\n */\nexport function deserializeTransferrableObject(\n  buffer: Uint16Array,\n  offset: number,\n  count: number,\n  stringContext: StringContext,\n  nodeContext: NodeContext,\n  objectContext?: ObjectContext,\n): DeserializedArgs {\n  const args: unknown[] = [];\n  for (let i = 0; i < count; i++) {\n    switch (buffer[offset++] as TransferrableObjectType) {\n      case TransferrableObjectType.SmallInt:\n        args.push(buffer[offset++]);\n        break;\n\n      case TransferrableObjectType.Float:\n        u16[0] = buffer[offset++];\n        u16[1] = buffer[offset++];\n        args.push(f32[0]);\n        break;\n\n      case TransferrableObjectType.String:\n        args.push(stringContext.get(buffer[offset++]));\n        break;\n\n      case TransferrableObjectType.Array:\n        const size = buffer[offset++];\n        const des = deserializeTransferrableObject(buffer, offset, size, stringContext, nodeContext, objectContext);\n        args.push(des.args);\n        offset = des.offset;\n        break;\n\n      case TransferrableObjectType.TransferObject:\n        if (!objectContext) {\n          throw new Error('objectContext not provided.');\n        }\n\n        args.push(objectContext.get(buffer[offset++]));\n        break;\n\n      case TransferrableObjectType.CanvasRenderingContext2D:\n        const canvas = nodeContext.getNode(buffer[offset++]) as HTMLCanvasElement;\n        args.push(canvas.getContext('2d'));\n        break;\n\n      case TransferrableObjectType.HTMLElement:\n        args.push(nodeContext.getNode(buffer[offset++]));\n        break;\n\n      default:\n        throw new Error('Cannot deserialize argument.');\n    }\n  }\n  return {\n    args,\n    offset,\n  };\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TransferrableMutationType, ObjectCreationIndex } from '../../transfer/TransferrableMutation';\nimport { CommandExecutorInterface } from './interface';\nimport { deserializeTransferrableObject } from '../deserializeTransferrableObject';\n\nexport const ObjectCreationProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.OBJECT_CREATION);\n\n  if (!objectContext) {\n    throw new Error('objectContext is not defined.');\n  }\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      const functionName = strings.get(mutations[startPosition + ObjectCreationIndex.FunctionName]);\n      const objectId = mutations[startPosition + ObjectCreationIndex.ObjectId];\n      const argCount = mutations[startPosition + ObjectCreationIndex.ArgumentCount];\n\n      const { offset: targetOffset, args: deserializedTarget } = deserializeTransferrableObject(\n        mutations,\n        startPosition + ObjectCreationIndex.SerializedTarget,\n        1, // argCount\n        strings,\n        nodeContext,\n        objectContext,\n      );\n      const target = deserializedTarget[0] as any;\n\n      const { offset: argsOffset, args } = deserializeTransferrableObject(mutations, targetOffset, argCount, strings, nodeContext, objectContext);\n\n      if (allowedExecution && allowedMutation) {\n        if (functionName === 'new') {\n          // deal with constructor case here\n        } else {\n          objectContext.store(objectId, target[functionName](...args));\n        }\n      }\n\n      return argsOffset;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const functionName = strings.get(mutations[startPosition + ObjectCreationIndex.FunctionName]);\n      const objectId = mutations[startPosition + ObjectCreationIndex.ObjectId];\n      const argCount = mutations[startPosition + ObjectCreationIndex.ArgumentCount];\n\n      const { args: deserializedTarget } = deserializeTransferrableObject(\n        mutations,\n        startPosition + ObjectCreationIndex.SerializedTarget,\n        1, // argCount\n        strings,\n        nodeContext,\n        objectContext,\n      );\n      const target = deserializedTarget[0] as RenderableElement;\n\n      return {\n        type: 'OBJECT_CREATION',\n        target,\n        functionName,\n        objectId,\n        argCount,\n        allowedExecution,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandExecutorInterface } from './interface';\nimport { TransferrableMutationType, ImageBitmapMutationIndex } from '../../transfer/TransferrableMutation';\nimport { TransferrableKeys } from '../../transfer/TransferrableKeys';\nimport { MessageType } from '../../transfer/Messages';\n\nexport const ImageBitmapProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.IMAGE_BITMAP_INSTANCE);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const targetIndex = mutations[startPosition + ImageBitmapMutationIndex.Target];\n        const target = nodeContext.getNode(targetIndex);\n        if (target) {\n          self.createImageBitmap(target as HTMLImageElement | HTMLCanvasElement).then((imageBitmap) => {\n            workerContext.messageToWorker(\n              {\n                [TransferrableKeys.type]: MessageType.IMAGE_BITMAP_INSTANCE,\n                [TransferrableKeys.callIndex]: mutations[startPosition + ImageBitmapMutationIndex.CallIndex],\n                [TransferrableKeys.data]: imageBitmap,\n              },\n              [imageBitmap],\n            );\n          });\n        } else {\n          console.error(`IMAGE_BITMAP_INSTANCE: getNode(${targetIndex}) is null.`);\n        }\n      }\n\n      return startPosition + ImageBitmapMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const targetIndex = mutations[startPosition + ImageBitmapMutationIndex.Target];\n      const target = nodeContext.getNode(targetIndex);\n      return {\n        type: 'IMAGE_BITMAP_INSTANCE',\n        target,\n        allowedExecution,\n        callIndex: mutations[startPosition + ImageBitmapMutationIndex.CallIndex],\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandExecutorInterface } from './interface';\nimport { TransferrableMutationType, StorageMutationIndex } from '../../transfer/TransferrableMutation';\nimport { StorageLocation } from '../../transfer/TransferrableStorage';\nimport { TransferrableKeys } from '../../transfer/TransferrableKeys';\nimport { MessageType, StorageValueToWorker, GetOrSet } from '../../transfer/Messages';\n\nexport const StorageProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.STORAGE);\n\n  const get = (location: StorageLocation, key: string | null): void => {\n    if (config.sanitizer && location === StorageLocation.AmpState) {\n      config.sanitizer.getStorage(location, key).then((value) => {\n        const message: StorageValueToWorker = {\n          [TransferrableKeys.type]: MessageType.GET_STORAGE,\n          [TransferrableKeys.storageKey]: key || '',\n          [TransferrableKeys.storageLocation]: location,\n          [TransferrableKeys.value]: value,\n        };\n        workerContext.messageToWorker(message);\n      });\n    } else {\n      console.error(`STORAGE: Sanitizer not found or unsupported location:`, location);\n    }\n  };\n\n  const set = (location: StorageLocation, key: string | null, value: string | null): void => {\n    if (config.sanitizer) {\n      // TODO: Message worker so AMP.setState() can be Promise-able.\n      config.sanitizer.setStorage(location, key, value);\n    } else {\n      let storage;\n      if (location === StorageLocation.Local) {\n        storage = window.localStorage;\n      } else if (location === StorageLocation.Session) {\n        storage = window.sessionStorage;\n      }\n      if (storage) {\n        if (key == null) {\n          if (value == null) {\n            storage.clear();\n          } else {\n            throw new Error('Unexpected storage operation.');\n          }\n        } else {\n          if (value == null) {\n            storage.removeItem(key);\n          } else {\n            storage.setItem(key, value);\n          }\n        }\n      } else {\n        console.error(`STORAGE: Unexpected location: \"${location}\".`);\n      }\n    }\n  };\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number, allowedMutation: boolean): number {\n      if (allowedExecution && allowedMutation) {\n        const operation = mutations[startPosition + StorageMutationIndex.Operation];\n        const location = mutations[startPosition + StorageMutationIndex.Location];\n        const keyIndex = mutations[startPosition + StorageMutationIndex.Key];\n        const valueIndex = mutations[startPosition + StorageMutationIndex.Value];\n\n        // TODO(choumx): Clean up key/value strings (or don't store them in the first place)\n        // to avoid leaking memory.\n        const key = keyIndex > 0 ? strings.get(keyIndex) : null;\n        const value = valueIndex > 0 ? strings.get(valueIndex) : null;\n\n        if (operation === GetOrSet.GET) {\n          get(location, key);\n        } else if (operation === GetOrSet.SET) {\n          set(location, key, value);\n        }\n      }\n\n      return startPosition + StorageMutationIndex.End;\n    },\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const operation = mutations[startPosition + StorageMutationIndex.Operation];\n      const location = mutations[startPosition + StorageMutationIndex.Location];\n      const keyIndex = mutations[startPosition + StorageMutationIndex.Key];\n      const valueIndex = mutations[startPosition + StorageMutationIndex.Value];\n\n      const key = keyIndex > 0 ? strings.get(keyIndex) : null;\n      const value = valueIndex > 0 ? strings.get(valueIndex) : null;\n\n      return {\n        type: 'STORAGE',\n        operation,\n        location,\n        key,\n        value,\n        allowedExecution,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum StorageLocation {\n  Local = 0,\n  Session = 1,\n  AmpState = 2,\n}\n","/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandExecutorInterface } from './interface';\nimport { TransferrableMutationType, FunctionMutationIndex } from '../../transfer/TransferrableMutation';\nimport { ResolveOrReject } from '../../transfer/Messages';\n\nlet fnCallCount = 0;\n\n/**\n * A mapping between each request to callFunction and its Promise.\n */\nconst promiseMap: {\n  [id: number]: {\n    promise: Promise<any>;\n    resolve: (arg: any) => void;\n    reject: (arg: any) => void;\n  };\n} = {};\n\n/**\n * Each invocation of `ExportedWorker.prototype.callFunction` needs to be registered with a unique index\n * and promise. The index is given to the underlying Worker and returned by it as well. That enables the main-thread to\n * correlate postMessage responses with their original requests and resolve/reject the correct Promise.\n */\nexport function registerPromise(): { promise: Promise<any>; index: number } {\n  // TS won't realize that the constructor promise assigns the handlers, so we `any` them.\n  let resolve: any;\n  let reject: any;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  // Wraparound to 0 in case someone attempts to register over 9 quadrillion promises.\n  if (fnCallCount >= Number.MAX_VALUE) {\n    fnCallCount = 0;\n  }\n  const index = fnCallCount++;\n\n  promiseMap[index] = { promise, resolve, reject };\n  return { promise, index };\n}\n\nexport const FunctionProcessor: CommandExecutorInterface = (strings, nodeContext, workerContext, objectContext, config) => {\n  const allowedExecution = config.executorsAllowed.includes(TransferrableMutationType.FUNCTION_CALL);\n\n  return {\n    execute(mutations: Uint16Array, startPosition: number): number {\n      if (allowedExecution) {\n        const status = mutations[startPosition + FunctionMutationIndex.Status];\n        const index = mutations[startPosition + FunctionMutationIndex.Index];\n        const value = mutations[startPosition + FunctionMutationIndex.Value];\n\n        const parsed = strings.hasIndex(value) ? JSON.parse(strings.get(value)) : undefined;\n        if (status === ResolveOrReject.RESOLVE) {\n          promiseMap[index].resolve(parsed);\n        } else {\n          promiseMap[index].reject(parsed);\n        }\n        delete promiseMap[index];\n      }\n      return startPosition + FunctionMutationIndex.End;\n    },\n\n    print(mutations: Uint16Array, startPosition: number): {} {\n      const status = mutations[startPosition + FunctionMutationIndex.Status];\n      const index = mutations[startPosition + FunctionMutationIndex.Index];\n      const value = mutations[startPosition + FunctionMutationIndex.Value];\n\n      return {\n        type: 'FUNCTION_INVOCATION',\n        status,\n        index,\n        value: strings.get(value),\n        allowedExecution,\n      };\n    },\n  };\n};\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores indexed strings that are used in postMessage() calls from the worker.\n */\nexport class StringContext {\n  private strings: Array<string>;\n\n  constructor() {\n    this.strings = [];\n  }\n\n  /**\n   * Return a string for the specified index.\n   * @param index string index to retrieve.\n   * @return string in map for the index.\n   */\n  get(index: number): string {\n    return this.strings[index] || '';\n  }\n\n  hasIndex(index: number) {\n    return this.strings[index] !== undefined;\n  }\n\n  /**\n   * Stores a string in mapping and returns the index of the location.\n   * @param value string to store\n   * @return location in map\n   */\n  store(value: string): void {\n    this.strings.push(value);\n  }\n\n  /**\n   * Stores a set of strings.\n   * @param values\n   */\n  storeValues(values: Array<string>): void {\n    values.forEach((v) => this.store(v));\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessageFromWorker, MessageToWorker } from '../transfer/Messages';\nimport { Phase } from '../transfer/Phase';\nimport { HydrateableNode } from '../transfer/TransferrableNodes';\nimport { DefaultAllowedMutations } from '../transfer/TransferrableMutation';\n\n/**\n * The callback for `mutationPump`. If specified, this callback will be called\n * for the new set of mutations pending. The callback can either immediately\n * call `flush()`, or it can reject mutations, or it can batch them further.\n */\nexport type MutationPumpFunction = (flush: Function, phase: Phase) => void;\n\nexport type LongTaskFunction = (promise: Promise<any>) => void;\n\nexport type HydrationFilterPredicate = (node: RenderableElement) => boolean;\n\nexport interface InboundWorkerDOMConfiguration {\n  // ---- Required Values.\n  authorURL: string;\n  domURL: string;\n\n  // ---- Optional Overrides\n  // Schedules mutation phase.\n  mutationPump?: MutationPumpFunction;\n  // Schedules long task.\n  longTask?: LongTaskFunction;\n  // Sanitizer for DOM Mutations\n  sanitizer?: Sanitizer;\n  // Hydration Filter Predicate\n  hydrateFilter?: HydrationFilterPredicate;\n  // Executor Filter, allow list\n  executorsAllowed?: Array<number>;\n\n  // ---- Optional Callbacks\n  // Called when worker consumes the page's initial DOM state.\n  onCreateWorker?: (initialDOM: RenderableElement, strings: Array<string>, skeleton: HydrateableNode, keys: Array<string>) => void;\n\n  onSendMessage?: (message: MessageToWorker, t: Transferable[]) => void;\n  // Called before a message is sent to the worker.\n  messageChannel?: MessageChannel;\n  // Called after a message is received from the worker.\n  onReceiveMessage?: (message: MessageFromWorker) => void;\n}\n\nexport interface WorkerDOMConfiguration {\n  // ---- Required Values.\n  authorURL: string;\n  domURL: string;\n\n  // ---- Optional, with defaults\n  // Schedules mutation phase.\n  mutationPump: MutationPumpFunction;\n  // Executor Filter, allow list\n  executorsAllowed: Array<number>;\n\n  // ---- Optional Overrides\n  // Schedules long task.\n  longTask?: LongTaskFunction;\n  // Sanitizer for DOM Mutations\n  sanitizer?: Sanitizer;\n  // Hydration Filter Predicate\n  hydrateFilter?: HydrationFilterPredicate;\n\n  // ---- Optional Callbacks\n  // Called when worker consumes the page's initial DOM state.\n  onCreateWorker?: (initialDOM: RenderableElement, strings: Array<string>, skeleton: HydrateableNode, keys: Array<string>) => void;\n  // Called after a message is received from the worker.\n  messageChannel?: MessageChannel;\n    // Called after a message is received from the worker.\n    onSendMessage?: (message: MessageToWorker, t: Transferable[]) => void;\n  onReceiveMessage?: (message: MessageFromWorker, t?: any) => void;\n}\n\nexport function normalizeConfiguration(config: InboundWorkerDOMConfiguration): WorkerDOMConfiguration {\n  return Object.assign(\n    {},\n    {\n      mutationPump: requestAnimationFrame.bind(null),\n      executorsAllowed: DefaultAllowedMutations,\n    },\n    config,\n  );\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessageToWorker } from '../transfer/Messages';\nimport { WorkerDOMConfiguration } from './configuration';\nimport { createHydrateableRootNode } from './serialize';\nimport { readableHydrateableRootNode, readableMessageToWorker } from './debugging';\nimport { NodeContext } from './nodes';\nimport { TransferrableKeys } from '../transfer/TransferrableKeys';\nimport { StorageLocation } from '../transfer/TransferrableStorage';\n\nexport class WorkerContext {\n  private [TransferrableKeys.worker]: Worker;\n  private nodeContext: NodeContext;\n  private config: WorkerDOMConfiguration;\n\n  /**\n   * @param baseElement\n   * @param nodeContext\n   * @param workerDOMScript\n   * @param authorScript\n   * @param config\n   */\n  constructor(baseElement: HTMLElement, nodeContext: NodeContext,   workerDOMScript: string, authorScript: string, config: WorkerDOMConfiguration) {\n    this.nodeContext = nodeContext;\n    this.config = config;\n\n    const { skeleton, strings } = createHydrateableRootNode(baseElement, config, this);\n    const cssKeys: Array<string> = [];\n    const globalEventHandlerKeys: Array<string> = [];\n    // TODO(choumx): Sync read of all localStorage and sessionStorage a possible performance bottleneck?\n    const localStorageData = config.sanitizer ? config.sanitizer.getStorage(StorageLocation.Local) : window.localStorage;\n    const sessionStorageData = config.sanitizer ? config.sanitizer.getStorage(StorageLocation.Session) : window.sessionStorage;\n\n    for (const key in baseElement.style) {\n      cssKeys.push(key);\n    }\n    for (const key in baseElement) {\n      if (key.startsWith('on')) {\n        globalEventHandlerKeys.push(key);\n      }\n    }\n\n    const code = `\n      'use strict';\n      (function(){\n        ${workerDOMScript}\n        self['window'] = self;\n        var workerDOM = WorkerThread.workerDOM;\n        WorkerThread.hydrate(\n          workerDOM.document,\n          ${JSON.stringify(strings)},\n          ${JSON.stringify(skeleton)},\n          ${JSON.stringify(cssKeys)},\n          ${JSON.stringify(globalEventHandlerKeys)},\n          [${window.innerWidth}, ${window.innerHeight}],\n          ${JSON.stringify(localStorageData)},\n          ${JSON.stringify(sessionStorageData)}\n        );\n        workerDOM.document[${TransferrableKeys.observe}](this);\n        Object.keys(workerDOM).forEach(function(k){self[k]=workerDOM[k]});\n      }).call(self);\n      ${authorScript}\n      //# sourceURL=${encodeURI(config.authorURL)}`;\n      this[TransferrableKeys.worker] = new Worker(URL.createObjectURL(new Blob([code])));\n    if (process.env[\"WORKER_DOM_DEBUG\"]) {\n      console.info('debug', 'hydratedNode', readableHydrateableRootNode(baseElement, config, this));\n    }\n    if (config.onCreateWorker) {\n      config.onCreateWorker(baseElement, strings, skeleton, cssKeys);\n    }\n    if (config.messageChannel) {\n      this[TransferrableKeys.worker].addEventListener(\"message\", (e)=> config.messageChannel?.port2.postMessage(e.data, [e.data]));\n    }\n  }\n\n  /**\n   * Returns the private worker.\n   */\n  get worker(): Worker {\n    return this[TransferrableKeys.worker];\n  }\n\n  /**\n   * @param message\n   */\n  messageToWorker(message: MessageToWorker, transferables?: Transferable[]) {\n    if (process.env[\"WORKER_DOM_DEBUG\"]) {\n      console.info('debug', 'messageToWorker', readableMessageToWorker(this.nodeContext, message));\n    }\n    if (this.config.onSendMessage) {\n      this.config.onSendMessage(message, transferables || []);\n    }\n    if (this.config.messageChannel) {\n      this.config.messageChannel.port1.postMessage(message, transferables || []);\n    }  \n    this.worker.postMessage(message, transferables || []);\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HydrateableNode, NodeType } from '../transfer/TransferrableNodes';\nimport { TransferrableKeys } from '../transfer/TransferrableKeys';\nimport { NumericBoolean } from '../utils';\nimport { WorkerDOMConfiguration, HydrationFilterPredicate } from './configuration';\nimport { applyDefaultInputListener, sendValueChangeOnAttributeMutation } from './commands/event-subscription';\nimport { WorkerContext } from './worker';\n\nconst NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT = [NodeType.COMMENT_NODE, NodeType.TEXT_NODE];\n\n/**\n * Serializes a DOM element for transport to the worker.\n * @param element\n * @param minimizeString Function for minimizing strings for optimized ferrying across postMessage.\n */\nfunction createHydrateableNode(\n  element: RenderableElement,\n  minimizeString: (value: string) => number,\n  hydrateFilter: HydrationFilterPredicate,\n  workerContext: WorkerContext,\n): HydrateableNode {\n  const filteredChildNodes = [].slice.call(element.childNodes).filter(hydrateFilter);\n  const hydrated: HydrateableNode = {\n    [TransferrableKeys.index]: element._index_,\n    [TransferrableKeys.transferred]: NumericBoolean.FALSE,\n    [TransferrableKeys.nodeType]: element.nodeType,\n    [TransferrableKeys.localOrNodeName]: minimizeString(element.localName || element.nodeName),\n    [TransferrableKeys.childNodes]: filteredChildNodes.map((child: RenderableElement) =>\n      createHydrateableNode(child, minimizeString, hydrateFilter, workerContext),\n    ),\n    [TransferrableKeys.attributes]: [].map.call(element.attributes || [], (attribute: Attr) => [\n      minimizeString(attribute.namespaceURI || 'null'),\n      minimizeString(attribute.name),\n      minimizeString(attribute.value),\n    ]),\n  };\n  if (element.namespaceURI != null) {\n    hydrated[TransferrableKeys.namespaceURI] = minimizeString(element.namespaceURI);\n  }\n  if (NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT.includes(element.nodeType) && (element as Text).textContent !== null) {\n    hydrated[TransferrableKeys.textContent] = minimizeString(element.textContent as string);\n  }\n  applyDefaultInputListener(workerContext, element);\n  sendValueChangeOnAttributeMutation(workerContext, element);\n  return hydrated;\n}\n\n/**\n * @param element\n */\nexport function createHydrateableRootNode(\n  element: RenderableElement,\n  config: WorkerDOMConfiguration,\n  workerContext: WorkerContext,\n): { skeleton: HydrateableNode; strings: Array<string> } {\n  const hydrateFilter: HydrationFilterPredicate = config.hydrateFilter || (() => true);\n  const strings: Array<string> = [];\n  const stringMap: Map<string, number> = new Map();\n  const storeString = (value: string): number => {\n    if (stringMap.has(value)) {\n      // Safe to cast since we verified the mapping contains the value.\n      return stringMap.get(value) as number;\n    }\n    const count = strings.length;\n    stringMap.set(value, count);\n    strings.push(value);\n    return count;\n  };\n  const skeleton = createHydrateableNode(element, storeString, hydrateFilter, workerContext);\n  return { skeleton, strings };\n}\n\n/**\n * @param element\n */\nexport function createReadableHydrateableRootNode(\n  element: RenderableElement,\n  config: WorkerDOMConfiguration,\n  workerContext: WorkerContext,\n): HydrateableNode {\n  // \"Readable\" variant doesn't do any string minimization so we can output it for debugging purposes.\n  // Note that this intentionally breaks the type contract of createHydrateableNode() and HydrateableNode.\n  return createHydrateableNode(element, ((value: string): string => value) as any, config.hydrateFilter || (() => true), workerContext);\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Converts index-based worker messages to human-readable objects.\n *\n * Requires manual upkeep to keep consistency with messages and enums.\n * This allows us to continue using 'const enum' for enum inlining.\n * @see https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#9.4\n */\n\nimport { EventToWorker, MessageType, MessageToWorker, ValueSyncToWorker, BoundingClientRectToWorker } from '../transfer/Messages';\nimport { HydrateableNode, TransferredNode, TransferrableNodeIndex } from '../transfer/TransferrableNodes';\nimport { NodeContext } from './nodes';\nimport { TransferrableEvent } from '../transfer/TransferrableEvent';\nimport { TransferrableKeys } from '../transfer/TransferrableKeys';\nimport { TransferrableSyncValue } from '../transfer/TransferrableSyncValue';\nimport { createReadableHydrateableRootNode } from './serialize';\nimport { WorkerDOMConfiguration } from './configuration';\nimport { WorkerContext } from './worker';\n\n/**\n * @param element\n */\nexport const readableHydrateableRootNode = (element: RenderableElement, config: WorkerDOMConfiguration, workerContext: WorkerContext): {} =>\n  readableHydrateableNode(createReadableHydrateableRootNode(element, config, workerContext));\n/**\n * @param nodeContext {NodeContext}\n * @param node {TransferredNode}\n */\nexport const readableTransferredNode = (nodeContext: NodeContext, node: TransferredNode): {} | number | null =>\n  (node != null && nodeContext.getNode(node[TransferrableNodeIndex.Index])) || node;\n\n/**\n * @param node\n */\nfunction readableHydrateableNode(node: HydrateableNode): {} {\n  const out: any = {\n    nodeType: node[TransferrableKeys.nodeType],\n    name: node[TransferrableKeys.localOrNodeName],\n    attributes: null,\n    childNodes: null,\n  };\n\n  const attributes = node[TransferrableKeys.attributes];\n  if (attributes) {\n    out.attributes = attributes.map((attr) => ({\n      name: attr[1],\n      value: attr[2],\n    }));\n  }\n\n  const childNodes = node[TransferrableKeys.childNodes];\n  if (childNodes) {\n    out.childNodes = childNodes.map(readableHydrateableNode);\n  }\n\n  return out;\n}\n\n/**\n * @param message {MessageToWorker}\n */\nconst isEvent = (message: MessageToWorker): message is EventToWorker => message[TransferrableKeys.type] == MessageType.EVENT;\nconst isValueSync = (message: MessageToWorker): message is ValueSyncToWorker => message[TransferrableKeys.type] == MessageType.SYNC;\nconst isBoundingClientRect = (message: MessageToWorker): message is BoundingClientRectToWorker =>\n  message[TransferrableKeys.type] === MessageType.GET_BOUNDING_CLIENT_RECT;\n\n/**\n * @param nodeContext {NodeContext}\n * @param event {TransferrableEvent}\n */\nfunction readableTransferrableEvent(nodeContext: NodeContext, event: TransferrableEvent): {} {\n  const value = (item?: null | number | boolean | TransferredNode): number | boolean | {} | null => {\n    if (typeof item === 'number' || typeof item === 'boolean') {\n      return item !== undefined ? item : null;\n    }\n    return item !== undefined && item !== null ? readableTransferredNode(nodeContext, item) : null;\n  };\n\n  return {\n    type: event[TransferrableKeys.type],\n    bubbles: value(event[TransferrableKeys.bubbles]),\n    cancelable: value(event[TransferrableKeys.cancelable]),\n    cancelBubble: value(event[TransferrableKeys.cancelBubble]),\n    defaultPrevented: value(event[TransferrableKeys.defaultPrevented]),\n    eventPhase: value(event[TransferrableKeys.eventPhase]),\n    isTrusted: value(event[TransferrableKeys.isTrusted]),\n    returnValue: value(event[TransferrableKeys.returnValue]),\n    currentTarget: value(event[TransferrableKeys.currentTarget]),\n    target: value(event[TransferrableKeys.target]),\n    scoped: value(event[TransferrableKeys.scoped]),\n    keyCode: value(event[TransferrableKeys.keyCode]),\n  };\n}\n\n/**\n * @param nodeContext {NodeContext}\n * @param value {TransferrableSyncValue}\n */\nfunction readableTransferrableSyncValue(nodeContext: NodeContext, value: TransferrableSyncValue): {} {\n  const index = value[TransferrableKeys.index];\n  return {\n    target: nodeContext.getNode(index) || index,\n    value: value[TransferrableKeys.value],\n  };\n}\n\n/**\n * @param message\n */\nexport function readableMessageToWorker(nodeContext: NodeContext, message: MessageToWorker): {} {\n  if (isEvent(message)) {\n    const event = message[TransferrableKeys.event];\n    return {\n      type: 'EVENT',\n      event: readableTransferrableEvent(nodeContext, event),\n    };\n  } else if (isValueSync(message)) {\n    const sync = message[TransferrableKeys.sync];\n    return {\n      type: 'SYNC',\n      sync: readableTransferrableSyncValue(nodeContext, sync),\n    };\n  } else if (isBoundingClientRect(message)) {\n    return {\n      type: 'GET_BOUNDING_CLIENT_RECT',\n      target: readableTransferredNode(nodeContext, message[TransferrableKeys.target]),\n    };\n  } else {\n    return 'Unrecognized MessageToWorker type: ' + message[TransferrableKeys.type];\n  }\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare type TransferObject = CanvasGradient | CanvasPattern;\n\n/**\n * Stores objects that have their behavior handled from the main-thread. Each object is associated to a unique ID.\n */\nexport class ObjectContext {\n  private objects: Map<number, TransferObject>;\n\n  constructor() {\n    this.objects = new Map();\n  }\n\n  store(id: number, obj: TransferObject): void {\n    this.objects.set(id, obj);\n  }\n\n  get(id: number): TransferObject {\n    const obj = this.objects.get(id);\n\n    if (obj) {\n      return obj;\n    } else {\n      throw new Error('Object with id (' + id + ') does not exist.');\n    }\n  }\n}\n","/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WorkerContext } from './worker';\nimport { WorkerDOMConfiguration } from './configuration';\nimport { registerPromise } from './commands/function';\nimport { FunctionCallToWorker, MessageType } from '../transfer/Messages';\nimport { TransferrableKeys } from '../transfer/TransferrableKeys';\nimport { TransferrableMutationType } from '../transfer/TransferrableMutation';\n\n/**\n * An ExportedWorker is returned by the upgradeElement API.\n * For the most part, it delegates to the underlying Worker.\n *\n * It notably removes `postMessage` support and add `callFunction`.\n */\nexport class ExportedWorker {\n  workerContext_: WorkerContext;\n  config: WorkerDOMConfiguration;\n\n  constructor(workerContext: WorkerContext, config: WorkerDOMConfiguration) {\n    this.workerContext_ = workerContext;\n    this.config = config;\n  }\n\n  /**\n   * Calls a function in the worker and returns a promise with the result.\n   * @param functionIdentifer\n   * @param functionArguments\n   */\n  callFunction(functionIdentifer: string, ...functionArguments: any[]): Promise<any> {\n    if (!this.config.executorsAllowed.includes(TransferrableMutationType.FUNCTION_CALL)) {\n      throw new Error(`[worker-dom]: Error calling ${functionIdentifer}. You must enable the FUNCTION_CALL executor within the config.`);\n    }\n\n    const { promise, index } = registerPromise();\n    const msg: FunctionCallToWorker = {\n      [TransferrableKeys.type]: MessageType.FUNCTION,\n      [TransferrableKeys.functionIdentifier]: functionIdentifer,\n      [TransferrableKeys.functionArguments]: JSON.stringify(functionArguments),\n      [TransferrableKeys.index]: index,\n    };\n    this.workerContext_.messageToWorker(msg);\n    return promise;\n  }\n\n  set onerror(handler: any) {\n    this.workerContext_.worker.onerror = handler;\n  }\n\n  terminate(): void {\n    this.workerContext_.worker.terminate();\n  }\n}\n"],"names":["Refresh","require","injectIntoGlobalHook","window","$RefreshReg$","$RefreshSig$","type","module","exports","hasSymbol","Symbol","for","REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","PossiblyWeakMap","WeakMap","Map","allFamiliesByID","allFamiliesByType","allSignaturesByType","updatedFamiliesByType","pendingUpdates","helpersByRendererID","helpersByRoot","mountedRoots","Set","failedRoots","didSomeRootFailOnMount","computeFullKey","signature","fullKey","ownKey","hooks","getCustomHooks","err","forceReset","i","length","hook","nestedHookSignature","get","undefined","nestedHookKey","haveEqualSignatures","prevType","nextType","prevSignature","nextSignature","isReactClass","prototype","isReactComponent","canPreserveStateBetween","resolveFamily","performReactRefresh","staleFamilies","updatedFamilies","updates","forEach","_ref","family","current","set","add","update","helpers","setRefreshHandler","didError","firstError","element","root","Error","scheduleRoot","scheduleRefresh","register","id","has","push","$$typeof","render","setSignature","key","arguments","collectCustomHooksForSignature","getFamilyByID","getFamilyByType","findAffectedHostInstances","families","affectedInstances","instancesForRoot","findHostInstancesForRefresh","inst","globalObject","__REACT_DEVTOOLS_GLOBAL_HOOK__","nextID","supportsFiber","inject","injected","onCommitFiberRoot","maybePriorityLevel","onCommitFiberUnmount","oldInject","apply","oldOnCommitFiberRoot","alternate","wasMounted","memoizedState","isMounted","delete","hasUnrecoverableErrors","_getMountedRootCount","size","createSignatureFunctionForTransform","call","savedType","hasCustomHooks","isLikelyComponentType","ownNames","Object","getOwnPropertyNames","__proto__","name","displayName","test","ReactFreshRuntime","freeze","runtime","default","HMR_HOST","HMR_PORT","HMR_ENV_HASH","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","acceptedAssets","parent","isParcelRequire","WebSocket","hostname","location","protocol","indexOf","port","ws","onmessage","event","JSON","parse","removeErrorOverlay","assets","filter","asset","envHash","handled","didAccept","hmrAcceptCheck","global","parcelRequire","console","clear","hmrApply","hmrAcceptRun","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","updateLink","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","absolute","Function","output","depsByBundle","cached","cache","some","v","cb","assetsToAlsoAccept","channel","MessageChannel","port1","m","upgradeElement","baseElement","domURL","messageChannel","authorURL","Promise","resolve","ALLOWABLE_MESSAGE_TYPES","MessageType","MUTATE","HYDRATE","fetchAndInstall","config","fetchPromise","all","fetch","then","response","text","install","stringContext","StringContext","objectContext","ObjectContext","nodeContext","NodeContext","normalizedConfig","domScriptContent","authorScriptContent","workerContext","WorkerContext","mutatorContext","MutatorProcessor","worker","includes","TransferrableKeys","mutate","phase","nodes","strings","Uint16Array","mutations","ExportedWorker","GetOrSet","ResolveOrReject","constructor","allowVisibleMutations","group","disallowedMutations","mutationQueue","mutationArray","operationStart","mutationType","allow","executor","executors","ReadableMutationType","print","execute","groupEnd","pendingMutations","sanitizer","mutationPumpFunction","mutationPump","args","sharedLongTaskProcessor","LongTaskExecutor","TransferrableMutationType","CHILD_LIST","ChildListProcessor","ATTRIBUTES","AttributeProcessor","CHARACTER_DATA","CharacterDataProcessor","PROPERTIES","PropertyProcessor","EVENT_SUBSCRIPTION","EventSubscriptionProcessor","GET_BOUNDING_CLIENT_RECT","BoundingClientRectProcessor","LONG_TASK_START","LONG_TASK_END","OFFSCREEN_CANVAS_INSTANCE","OffscreenCanvasProcessor","OBJECT_MUTATION","ObjectMutationProcessor","OBJECT_CREATION","ObjectCreationProcessor","IMAGE_BITMAP_INSTANCE","ImageBitmapProcessor","STORAGE","StorageProcessor","FUNCTION_CALL","FunctionProcessor","stringValues","storeValues","createNodes","syncFlush","allowedExecution","executorsAllowed","startPosition","allowedMutation","targetIndex","OffscreenCanvasMutationIndex","Target","target","getNode","offscreen","transferControlToOffscreen","messageToWorker","_index_","End","isUserVisibleMutation","DefaultAllowedMutations","ChildListMutationIndex","AttributeMutationIndex","CharacterDataMutationIndex","PropertyMutationIndex","LongTaskMutationIndex","ImageBitmapMutationIndex","ObjectMutationIndex","ObjectCreationIndex","TransferrableObjectType","StorageMutationIndex","FunctionMutationIndex","monitoredNodes","shouldTrackChanges","node","applyDefaultInputListener","oninput","fireValueChange","sendValueChangeOnAttributeMutation","MutationObserver","mutation","observe","attributes","SYNC","sync","index","value","fireResizeChange","cachedWindowSize","RESIZE","createTransferrableTouchList","touchList","values","touch","identifier","screenX","screenY","clientX","clientY","pageX","pageY","knownListeners","innerWidth","innerHeight","eventHandler","preventDefault","currentTarget","EVENT","bubbles","cancelable","cancelBubble","defaultPrevented","eventPhase","isTrusted","returnValue","timeStamp","keyCode","offsetX","offsetY","touches","changedTouches","processListenerChange","addEvent","iterator","eventIndex","AddEventRegistrationIndex","Index","Boolean","WorkerDOMPreventDefault","addEventListener","BASE_ELEMENT_INDEX","removeEventListener","inputEventSubscribed","isChangeEvent","onchange","addEventListenerCount","EventSubscriptionMutationIndex","AddEventListenerCount","removeEventListenerCount","RemoveEventListenerCount","addEventListenersPosition","Events","REMOVE_EVENT_SUBSCRIPTION_LENGTH","endPosition","ADD_EVENT_SUBSCRIPTION_LENGTH","isRemoveEvent","removedEventListeners","addedEventListeners","eventList","TransferrableTouchIndex","RemoveEventRegistrationIndex","nodeListEach","list","callback","buffer","nodeBuffer","nodeBufferLength","TransferrableNodeIndex","NodeType","TEXT_NODE","createTextNode","TextContent","COMMENT_NODE","createComment","DOCUMENT_FRAGMENT_NODE","createDocumentFragment","nodeName","NodeName","Namespace","createElementNS","sanitize","storeNode","count","childNodes","n","storeNodes","HTML_NAMESPACE","SVG_NAMESPACE","TransferredNodeIndex","BoundClientRectMutationIndex","boundingRect","getBoundingClientRect","top","right","bottom","left","width","height","appendNodeCount","AppendedNodeCount","removeNodeCount","RemovedNodeCount","slice","Nodes","removeId","addId","NextSibling","newNode","removedNodes","from","addedNodes","previousSibling","PreviousSibling","getValue","Value","attributeName","Name","mutated","removeAttribute","textContent","IsBoolean","NumericBoolean","TRUE","setProperty","String","toLower","toLowerCase","toUpper","toUpperCase","containsIndexOf","pos","keyValueString","currentResolver","longTask","active","functionName","FunctionName","argCount","ArgumentCount","offset","targetOffset","deserializedTarget","SerializedTarget","argsOffset","isSetter","object","descriptor","getOwnPropertyDescriptor","getPrototypeOf","f32","Float32Array","u16","deserializeTransferrableObject","SmallInt","Float","des","TransferObject","CanvasRenderingContext2D","canvas","getContext","HTMLElement","objectId","ObjectId","store","self","createImageBitmap","imageBitmap","callIndex","CallIndex","StorageLocation","AmpState","getStorage","GET_STORAGE","storageKey","storageLocation","setStorage","storage","Local","localStorage","Session","sessionStorage","removeItem","setItem","operation","Operation","Location","keyIndex","Key","valueIndex","GET","SET","fnCallCount","promiseMap","registerPromise","reject","promise","res","rej","Number","MAX_VALUE","status","Status","parsed","hasIndex","RESOLVE","normalizeConfiguration","assign","requestAnimationFrame","bind","workerDOMScript","authorScript","skeleton","cssKeys","globalEventHandlerKeys","localStorageData","sessionStorageData","style","startsWith","code","stringify","encodeURI","Worker","URL","createObjectURL","Blob","info","onCreateWorker","port2","postMessage","transferables","onSendMessage","NODES_ALLOWED_TO_TRANSMIT_TEXT_CONTENT","createHydrateableNode","minimizeString","hydrateFilter","filteredChildNodes","hydrated","transferred","FALSE","nodeType","localOrNodeName","localName","child","attribute","namespaceURI","createHydrateableRootNode","stringMap","storeString","createReadableHydrateableRootNode","readableHydrateableRootNode","readableHydrateableNode","readableTransferredNode","out","attr","isEvent","isValueSync","isBoundingClientRect","readableTransferrableEvent","item","scoped","readableTransferrableSyncValue","readableMessageToWorker","objects","obj","workerContext_","callFunction","functionIdentifer","functionArguments","msg","FUNCTION","functionIdentifier","handler","terminate"],"version":3,"file":"react-map.783678e2.js.map","sourceRoot":"/__parcel_source_root/"}