{"id":"../main-thread/configuration.ts","dependencies":[{"name":"/z/worker-dom/src/main-thread/tsconfig.json","includedInParent":true,"mtime":1603349362728},{"name":"/z/worker-dom/src/react-map/package.json","includedInParent":true,"mtime":1603352541233},{"name":"/z/worker-dom/src/react-map/.babelrc","includedInParent":true,"mtime":1603349362724},{"name":"../transfer/TransferrableMutation","loc":{"line":19,"column":40},"parent":"/z/worker-dom/src/main-thread/configuration.ts","resolved":"/z/worker-dom/src/transfer/TransferrableMutation.ts"}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeConfiguration = void 0;\n\nvar TransferrableMutation_1 = require(\"../transfer/TransferrableMutation\");\n\nfunction normalizeConfiguration(config) {\n  return Object.assign({}, {\n    mutationPump: requestAnimationFrame.bind(null),\n    executorsAllowed: TransferrableMutation_1.DefaultAllowedMutations\n  }, config);\n}\n\nexports.normalizeConfiguration = normalizeConfiguration;"},"sourceMaps":{"js":{"mappings":[{"source":"../main-thread/configuration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":4}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":27}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":30}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":37}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":38}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":73}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":74}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":25,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":16},"generated":{"line":25,"column":9}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":25,"column":31}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":39},"generated":{"line":25,"column":32}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":25,"column":38}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":76},"generated":{"line":25,"column":40}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":26,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":26,"column":9}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":15},"generated":{"line":26,"column":15}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":16},"generated":{"line":26,"column":16}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":26,"column":22}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":26,"column":23}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":26,"column":25}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":26,"column":27}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":27,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":6},"generated":{"line":27,"column":4}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":18},"generated":{"line":27,"column":16}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":20},"generated":{"line":27,"column":18}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":41},"generated":{"line":27,"column":39}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":42},"generated":{"line":27,"column":40}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":20},"generated":{"line":27,"column":44}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":47},"generated":{"line":27,"column":45}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":94,"column":20},"generated":{"line":27,"column":49}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":27,"column":50}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":28,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":28,"column":4}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":95,"column":22},"generated":{"line":28,"column":20}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":28,"column":22}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":28,"column":45}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":95,"column":24},"generated":{"line":28,"column":46}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":29,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":29,"column":3}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":97,"column":4},"generated":{"line":29,"column":5}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":29,"column":11}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":29,"column":12}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":99,"column":1},"generated":{"line":30,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":32,"column":0}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":32,"column":7}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":32,"column":8}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":32,"column":30}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":32,"column":33}},{"source":"../main-thread/configuration.ts","name":null,"original":{"line":90,"column":0},"generated":{"line":32,"column":55}}],"sources":{"../main-thread/configuration.ts":"/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessageFromWorker, MessageToWorker } from '../transfer/Messages';\nimport { Phase } from '../transfer/Phase';\nimport { HydrateableNode } from '../transfer/TransferrableNodes';\nimport { DefaultAllowedMutations } from '../transfer/TransferrableMutation';\n\n/**\n * The callback for `mutationPump`. If specified, this callback will be called\n * for the new set of mutations pending. The callback can either immediately\n * call `flush()`, or it can reject mutations, or it can batch them further.\n */\nexport type MutationPumpFunction = (flush: Function, phase: Phase) => void;\n\nexport type LongTaskFunction = (promise: Promise<any>) => void;\n\nexport type HydrationFilterPredicate = (node: RenderableElement) => boolean;\n\nexport interface InboundWorkerDOMConfiguration {\n  // ---- Required Values.\n  authorURL: string;\n  domURL: string;\n\n  // ---- Optional Overrides\n  // Schedules mutation phase.\n  mutationPump?: MutationPumpFunction;\n  // Schedules long task.\n  longTask?: LongTaskFunction;\n  // Sanitizer for DOM Mutations\n  sanitizer?: Sanitizer;\n  // Hydration Filter Predicate\n  hydrateFilter?: HydrationFilterPredicate;\n  // Executor Filter, allow list\n  executorsAllowed?: Array<number>;\n\n  // ---- Optional Callbacks\n  // Called when worker consumes the page's initial DOM state.\n  onCreateWorker?: (initialDOM: RenderableElement, strings: Array<string>, skeleton: HydrateableNode, keys: Array<string>) => void;\n\n  onSendMessage?: (message: MessageToWorker, t: Transferable[]) => void;\n  // Called before a message is sent to the worker.\n  messageChannel?: MessageChannel;\n  // Called after a message is received from the worker.\n  onReceiveMessage?: (message: MessageFromWorker) => void;\n}\n\nexport interface WorkerDOMConfiguration {\n  // ---- Required Values.\n  authorURL: string;\n  domURL: string;\n\n  // ---- Optional, with defaults\n  // Schedules mutation phase.\n  mutationPump: MutationPumpFunction;\n  // Executor Filter, allow list\n  executorsAllowed: Array<number>;\n\n  // ---- Optional Overrides\n  // Schedules long task.\n  longTask?: LongTaskFunction;\n  // Sanitizer for DOM Mutations\n  sanitizer?: Sanitizer;\n  // Hydration Filter Predicate\n  hydrateFilter?: HydrationFilterPredicate;\n\n  // ---- Optional Callbacks\n  // Called when worker consumes the page's initial DOM state.\n  onCreateWorker?: (initialDOM: RenderableElement, strings: Array<string>, skeleton: HydrateableNode, keys: Array<string>) => void;\n  // Called after a message is received from the worker.\n  messageChannel?: MessageChannel;\n    // Called after a message is received from the worker.\n    onSendMessage?: (message: MessageToWorker, t: Transferable[]) => void;\n  onReceiveMessage?: (message: MessageFromWorker, t?: any) => void;\n}\n\nexport function normalizeConfiguration(config: InboundWorkerDOMConfiguration): WorkerDOMConfiguration {\n  return Object.assign(\n    {},\n    {\n      mutationPump: requestAnimationFrame.bind(null),\n      executorsAllowed: DefaultAllowedMutations,\n    },\n    config,\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"b11d35afd934db9ccf31e34b24e4a253","cacheData":{"env":{}}}