{"id":"../main-thread/strings.ts","dependencies":[{"name":"/z/worker-dom/src/main-thread/tsconfig.json","includedInParent":true,"mtime":1603349362728},{"name":"/z/worker-dom/src/react-map/package.json","includedInParent":true,"mtime":1603352541233},{"name":"/z/worker-dom/src/react-map/.babelrc","includedInParent":true,"mtime":1603349362724}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringContext = void 0;\n/**\n * Stores indexed strings that are used in postMessage() calls from the worker.\n */\n\nvar StringContext = /*#__PURE__*/function () {\n  function StringContext() {\n    _classCallCheck(this, StringContext);\n\n    this.strings = [];\n  }\n  /**\n   * Return a string for the specified index.\n   * @param index string index to retrieve.\n   * @return string in map for the index.\n   */\n\n\n  _createClass(StringContext, [{\n    key: \"get\",\n    value: function get(index) {\n      return this.strings[index] || '';\n    }\n  }, {\n    key: \"hasIndex\",\n    value: function hasIndex(index) {\n      return this.strings[index] !== undefined;\n    }\n    /**\n     * Stores a string in mapping and returns the index of the location.\n     * @param value string to store\n     * @return location in map\n     */\n\n  }, {\n    key: \"store\",\n    value: function store(value) {\n      this.strings.push(value);\n    }\n    /**\n     * Stores a set of strings.\n     * @param values\n     */\n\n  }, {\n    key: \"storeValues\",\n    value: function storeValues(values) {\n      var _this = this;\n\n      values.forEach(function (v) {\n        return _this.store(v);\n      });\n    }\n  }]);\n\n  return StringContext;\n}();\n\nexports.StringContext = StringContext;"},"sourceMaps":{"js":{"mappings":[{"source":"../main-thread/strings.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":28,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":32,"column":4}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":33,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":33,"column":27}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":34,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":36,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":24,"column":9},"generated":{"line":36,"column":9}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":36,"column":16}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":36,"column":19}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":36,"column":21}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":25,"column":3},"generated":{"line":37,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":38,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":47,"column":24}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":32,"column":19},"generated":{"line":47,"column":31}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":48,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":48,"column":13}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":48,"column":18}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":48,"column":25}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":48,"column":26}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":48,"column":31}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":34},"generated":{"line":48,"column":36}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":48,"column":38}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":34,"column":3},"generated":{"line":49,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":36,"column":11},"generated":{"line":52,"column":29}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":52,"column":36}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":53,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":53,"column":13}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":16},"generated":{"line":53,"column":18}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":53,"column":25}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":24},"generated":{"line":53,"column":26}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":53,"column":31}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":35},"generated":{"line":53,"column":37}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":53,"column":46}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":38,"column":3},"generated":{"line":54,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":55,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":63,"column":26}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":63,"column":33}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":64,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":64,"column":11}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":64,"column":18}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":17},"generated":{"line":64,"column":19}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":64,"column":23}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":64,"column":24}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":64,"column":29}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":47,"column":3},"generated":{"line":65,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":66,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":73,"column":32}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":53,"column":35},"generated":{"line":73,"column":40}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":53,"column":35},"generated":{"line":74,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":76,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":76,"column":6}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":10},"generated":{"line":76,"column":12}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":11},"generated":{"line":76,"column":13}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":76,"column":20}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":76,"column":21}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":20},"generated":{"line":76,"column":31}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":76,"column":32}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":77,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":26},"generated":{"line":77,"column":15}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":77,"column":20}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":31},"generated":{"line":77,"column":21}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":26},"generated":{"line":77,"column":26}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":37},"generated":{"line":77,"column":27}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":26},"generated":{"line":77,"column":28}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":77,"column":29}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":78,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":78,"column":7}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":55,"column":3},"generated":{"line":79,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":85,"column":0}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":85,"column":7}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":85,"column":8}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":85,"column":21}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":85,"column":24}},{"source":"../main-thread/strings.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":85,"column":37}}],"sources":{"../main-thread/strings.ts":"/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores indexed strings that are used in postMessage() calls from the worker.\n */\nexport class StringContext {\n  private strings: Array<string>;\n\n  constructor() {\n    this.strings = [];\n  }\n\n  /**\n   * Return a string for the specified index.\n   * @param index string index to retrieve.\n   * @return string in map for the index.\n   */\n  get(index: number): string {\n    return this.strings[index] || '';\n  }\n\n  hasIndex(index: number) {\n    return this.strings[index] !== undefined;\n  }\n\n  /**\n   * Stores a string in mapping and returns the index of the location.\n   * @param value string to store\n   * @return location in map\n   */\n  store(value: string): void {\n    this.strings.push(value);\n  }\n\n  /**\n   * Stores a set of strings.\n   * @param values\n   */\n  storeValues(values: Array<string>): void {\n    values.forEach((v) => this.store(v));\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"76e605527dedab0b37b6f213bc00a495","cacheData":{"env":{}}}