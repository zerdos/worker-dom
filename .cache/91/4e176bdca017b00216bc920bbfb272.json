{"id":"../main-thread/object-context.ts","dependencies":[{"name":"/z/worker-dom/src/main-thread/tsconfig.json","includedInParent":true,"mtime":1603349362728},{"name":"/z/worker-dom/src/react-map/package.json","includedInParent":true,"mtime":1603352541233},{"name":"/z/worker-dom/src/react-map/.babelrc","includedInParent":true,"mtime":1603349362724}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectContext = void 0;\n/**\n * Stores objects that have their behavior handled from the main-thread. Each object is associated to a unique ID.\n */\n\nvar ObjectContext = /*#__PURE__*/function () {\n  function ObjectContext() {\n    _classCallCheck(this, ObjectContext);\n\n    this.objects = new Map();\n  }\n\n  _createClass(ObjectContext, [{\n    key: \"store\",\n    value: function store(id, obj) {\n      this.objects.set(id, obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var obj = this.objects.get(id);\n\n      if (obj) {\n        return obj;\n      } else {\n        throw new Error('Object with id (' + id + ') does not exist.');\n      }\n    }\n  }]);\n\n  return ObjectContext;\n}();\n\nexports.ObjectContext = ObjectContext;"},"sourceMaps":{"js":{"mappings":[{"source":"../main-thread/object-context.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":28,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":32,"column":4}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":33,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":33,"column":27}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":36,"column":9}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":16}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":19},"generated":{"line":36,"column":19}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":36,"column":23}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":19},"generated":{"line":36,"column":26}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":36,"column":28}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":27,"column":3},"generated":{"line":37,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":41,"column":26}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":29,"column":20},"generated":{"line":41,"column":30}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":29,"column":39},"generated":{"line":41,"column":35}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":42,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":42,"column":11}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":42,"column":18}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":42,"column":19}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":42,"column":22}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":21},"generated":{"line":42,"column":23}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":42,"column":25}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":42,"column":27}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":42,"column":30}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":31,"column":3},"generated":{"line":43,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":46,"column":24}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":46,"column":28}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":47,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":47,"column":10}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":13},"generated":{"line":47,"column":13}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":16},"generated":{"line":47,"column":16}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":47,"column":21}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":16},"generated":{"line":47,"column":28}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":29},"generated":{"line":47,"column":29}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":16},"generated":{"line":47,"column":32}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":33},"generated":{"line":47,"column":33}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":16},"generated":{"line":47,"column":35}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":47,"column":36}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":49,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":49,"column":10}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":49,"column":13}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":49,"column":15}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":50,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":50,"column":15}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":50,"column":18}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":38,"column":5},"generated":{"line":51,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":51,"column":7}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":38,"column":11},"generated":{"line":51,"column":13}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":52,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":52,"column":14}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":52,"column":18}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":52,"column":23}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":52,"column":24}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":43},"generated":{"line":52,"column":45}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":52,"column":47}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":48},"generated":{"line":52,"column":50}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":52,"column":69}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":52,"column":70}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":53,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":41,"column":3},"generated":{"line":54,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":60,"column":0}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":60,"column":7}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":60,"column":8}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":60,"column":21}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":60,"column":24}},{"source":"../main-thread/object-context.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":60,"column":37}}],"sources":{"../main-thread/object-context.ts":"/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare type TransferObject = CanvasGradient | CanvasPattern;\n\n/**\n * Stores objects that have their behavior handled from the main-thread. Each object is associated to a unique ID.\n */\nexport class ObjectContext {\n  private objects: Map<number, TransferObject>;\n\n  constructor() {\n    this.objects = new Map();\n  }\n\n  store(id: number, obj: TransferObject): void {\n    this.objects.set(id, obj);\n  }\n\n  get(id: number): TransferObject {\n    const obj = this.objects.get(id);\n\n    if (obj) {\n      return obj;\n    } else {\n      throw new Error('Object with id (' + id + ') does not exist.');\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"cc89ecb56a0cdd03a1824f182c972679","cacheData":{"env":{}}}